Цель: Получить навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019. Создать программу с использованием Windows Forms на языках С#, С++, C.   Часть 1.  Задание (Вариант 4):    Реализовать процедуры умножения беззнакового целого числа (вводится с клавиатуры) число, равное степени 2, с использованием побитовой операции сдвига влево <<. Выполнить проверку, что смещение разряда не приведет к утрате исходных двоичных данных. Ход работы:   Введенное число считывается с консольной строки. Выполняется проверка на правильность ввода. Далее с консольной строки считывается степень двойки. Выполняется проверка на правильность ввода. Также выполняется проверка на то, что введенное число является степенью двойки, с помощью суммирования всех битов числа. Далее с помощью цикла проверяется каждый бит введенной степени двойки, чтобы узнать какой именно степенью оно является. Далее производится сдвиг изначального числа на введенную степень 2. Производится вывод изначального числа и его битового представления и вывод результата и его битового представления. Листинг кода:  #include <iostream> #include <bitset> using namespace std; int main() {     register int a,b,c;     cout << "Enter int:" << endl;     cin >> a;     while (a<0||cin.fail() || cin.get() != '\n')     {         cin.clear();         cin.ignore(9999, '\n');         cin.sync();         cout << "Error!" << endl;         cin >> a;     }     cout << "Enter degree of 2:" << endl;     cin >> b;     while (bitset<32>(b).count() != 1 || cin.fail() || cin.get() != '\n')     {         cin.clear();         cin.ignore(9999, '\n');         cin.sync();         cout << "Error!" << endl;         cin >> b;     }     for (register int i = 0; i < 32; i++)      {         register bool j = bitset<32>(b).test(i);         if (j == true)         {             c = i;             break;         }     }     cout << a << " -> " << bitset<32>(a) << endl;     a = a <<c;     cout << a << " -> " << bitset<32>(a) << endl;     return 0; } Выполнение программы:     Рис.1. Результат выполнения программы.      Рис.2. Результат выполнения программы.      Рис.3. Результат выполнения программы.      Часть 2.1.  Задание (Вариант 4):  – создать консольный ̆и Windows Forms проекты, выполняющие поразрядное сложение двух строк (фамилии и имени) с выводом промежуточных результатов.  Часть 2.2.  1. Дано натуральное число: - найти количество четных цифр числа; -определить, верно ли, что данная цифра А встречается в числе более двух раз (А вводить с клавиатуры). 2. Найти все четырехзначные числа, у которых сумма крайних цифр равна сумме средних цифр, а само число делится на 6 и 27. Ход работы:   В первой части задания вводится имя и фамилия, учитывая корректность данных. В зависимости от длины входных строк происходит поразрядное сложение. Во второй части задания вводится число, а также число A. Далее программа выполняет вычисления и выводит результат. Листинг кода консольного проекта(2.1):  string a = ""; Console.WriteLine("Введите первую строку:"); a = Console.ReadLine(); while (String.IsNullOrEmpty(a)== true || a[0]==' ') {          Console.WriteLine("Ошибка");     a = Console.ReadLine(); } string b = ""; Console.WriteLine("Введите вторую строку:"); b = Console.ReadLine(); while (String.IsNullOrEmpty(b) == true || b[0]==' ') {     Console.WriteLine("Ошибка");     b = Console.ReadLine(); } string c=""; for (int i = 0; i < a.Length; i++) {     int o = (int)a[i];     c = c+o.ToString()+" "; } Console.WriteLine(c); c = ""; for (int i = 0; i < b.Length; i++) {     int o = (int)b[i];     c = c+o.ToString()+" "; } Console.WriteLine(c); c = ""; for (int i=0;i<a.Length;i++) {     char d = (char)(a[i] + b[i]);     c = c + d;     if (i == b.Length - 1) break; } Console.WriteLine(c); return 0; Выполнение программы:   Рис.4. Результат выполнения программы.     Рис.5. Результат выполнения программы.     Рис.6. Результат выполнения программы.    Листинг кода Windows Forms проекта(2.1):  namespace Lab122 {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();             richTextBox1.Hide();             label3.Hide();             label4.Hide();             label5.Hide();             label6.Hide();             richTextBox2.Hide();             richTextBox3.Hide();         }         private void ENTER_Click(object sender, EventArgs e)         {             string a = textBox1.Text;             string b = textBox2.Text;             if(String.IsNullOrEmpty(a) == true || a[0]==' ')             {                 label3.Show();                 return;             }             if (String.IsNullOrEmpty(b) == true || b[0]==' ')             {                 label3.Show();                 return;             }             richTextBox1.Show();             label4.Show();             label5.Show();             label6.Show();             richTextBox2.Show();             richTextBox3.Show();             string c = "";             for (int i = 0; i < a.Length; i++)             {                 char d = (char)(a[i] + b[i]);                 c = c + d;                 if (i == b.Length - 1) break;             }             this.richTextBox1.Text =c;             c = "";             this.richTextBox2.Text = c;             for (int i = 0; i < a.Length; i++)             {                 int o = (int)a[i];                 c = o.ToString();                 this.richTextBox2.Text = this.richTextBox2.Text + c + " ";             }             c = "";             this.richTextBox3.Text = c;             for (int i = 0; i < b.Length; i++)             {                 int o = (int)b[i];                 c = o.ToString();                 this.richTextBox3.Text = this.richTextBox3.Text + c + " ";             }         }     } } Выполнение программы:    Рис.7. Заполненная форма.     Рис.8.Заполненная форма.    Рис.9.Заполненная форма.   Листинг кода Windows Forms проекта(2.2):  namespace Lab123Form {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();             label3.Hide();         }         private void button1_Click(object sender, EventArgs e)         {             int a;             int m;             int amount = 0;             if (!int.TryParse(textBox1.Text, out a)||a<1)             {                 label3.Show();                 return;             }             if (!int.TryParse(textBox2.Text, out m)||m>9||m<0)             {                 label3.Show();                 return;             }             string b = a.ToString();             for (int i = 0; i < b.Length; i++)             {                 if ((b[i] - '0') % 2 == 0)                 {                     amount = amount + 1;                 }             }              this.richTextBox1.Text = "Кол-во четных цифр:";             this.richTextBox1.Text = this.richTextBox1.Text + amount.ToString()+Environment.NewLine;             char c = (char)m;             c = (char)(c + '0');             amount = 0;             for (int i = 0; i < b.Length; i++)             {                 if (b[i] == c)                 {                     amount = amount + 1;                 }             }             if (amount > 2)                 this.richTextBox1.Text = this.richTextBox1.Text +"Число А встречается более двух раз" + Environment.NewLine;             else                 this.richTextBox1.Text = this.richTextBox1.Text + "Число А встречается менее двух раз" + Environment.NewLine;             this.richTextBox1.Text = this.richTextBox1.Text + "Все четырехзначные числа, у которых сумма крайних цифр равна сумме средних цифр, а само число делится на 6 и 27:"+Environment.NewLine;             for (int i = 1000; i < 10000; i++)             {                 b = i.ToString();                 int border = b[0] - '0' + b[3] - '0';                 int center = b[1] - '0' + b[2] - '0';                 if ((center == border) && (i % 6 == 0) && (i % 27 == 0))                     this.richTextBox1.Text = this.richTextBox1.Text +i+Environment.NewLine;             }         }     } } Выполнение программы:     Рис.7. Заполненная форма.     Рис.8.Заполненная форма.    Рис.9.Заполненная форма.         Вывод:  Реализована процедур=а умножения беззнакового целого числа (вводится с клавиатуры) число, равное степени 2, с использованием побитовой операции сдвига влево <<. Также реализованы консольная и widows Forms программа поразрядного сложения имени и фамилии, поиск количества четных цифр в числе, проверка на то встречается ли число А в этом числе больше двух раз и поиск всех четырехзначных чисел, у которых сумма крайних цифр равна сумме средних цифр, а само число делится на 6 и 27.        