Цель лабораторной работы: Реализовать алгоритм шифрования Предусмотреть возможность работы алгоритма в режиме Описание шифра: алгоритм битного блочного шифра с ключом переменной длины. Был разработан известным специалистом в области криптографии и защиты информации Брюсом Шнайером в году. Отличительными особенностями этого алгоритма стала более высокая степень криптостойкости, нежели алгоритма в том числе за счет использования переменной длины ключа, до бит) и высокая скорость шифрации/дешифрации за счет генерации таблиц замены). В общем случае алгоритм состоит из двух этапов расширение ключа и шифрация/дешифрация исходных данных. Рис. Общая схема алгоритма На этапе расширения ключа, исходный ключ преобразуется в матрицу раундовых ключей и матрицу подстановки или замены), общим объемом в байт. Шифрация данных, а также создания матрицы раундовых ключей и подстановки, происходит через использование сети Фейстеля, состоящей в свою очередь из раундов. Рис. Сеть Фейстеля для алгоритма Принцип работы сети Фейстеля для алгоритма Исходные данные разбиваются на блоки фиксированной длины как правило кратно степени двойки бит, бит). В случае если длина блока исходных данных меньше длины разрядности шифра, то блок дополняется каким-либо заранее известным образом. Блок делится на два равных подблока левый» и правый» В случае битной разрядности на два блока с длиной бита каждый. Левый подблок» видоизменяется функцией итерации в зависимости от ключа после чего он складывается по модулю с правым подблоком» Результат сложения присваивается новому левому подблоку который становится левой половиной входных данных для следующего раунда, а левый подблок» присваивается без изменений новому правому подблоку который становится правой половиной. Эта операция повторяется раз, при этом при переходе от одного этапа к другому меняются раундовые ключи и т.д.), где количество раундов для используемого алгоритма. Рис. Функция Процесс расширения ключа Выбирается искреннее число» или иначе Это такое число, которое изначально не содержит каких-либо повторяющихся последовательностей и является известным. Делается это для того, чтобы показать, что константа разработчиками была выбрана без преследования каких-то гнусных» целей, наприимер для создания лазейки в алгоритме В качестве такого искреннего числа в обычно используется число Значением мантиссы числа заполняется матрица раундовых ключей и матрицы подстановки Значение каждого раундового ключа складывается по модулю с соответствующим элементами исходного ключа Например, выполняется раундового ключа с первыми битами исходного ключа со вторыми битами исходного ключа и так далее. Если исходный ключ короче длины всех раундовых ключей бит), то он конкатенируется сам с собой: и так далее. Далее необходимо зашифровать вычислить новые значения) элементов матрицы раундовых ключей и матрицы подстановки. Для этого используется сеть Фейстеля для Используя текущие раундовые ключи и матрицы подстановок шифруем битную последовательность нуля: а результат записываем в и и шифруются изменёнными значениями раундовых ключей и матриц подстановки, результат записывается соответственно в и Шифрование продолжается до изменения всех раундовых ключей и элементов матриц подстановок Шифрование/дешифрование Процесс шифрации исходных данных строится по аналогии с процессом шифрации на этапе расширения ключа. Дешифрование выполняется точно так же, как и шифрование, но используются в обратном порядке. Режим Режим обратной связи вывода превращает блочный шифр в синхронный шифр потока: он генерирует ключевые блоки, которые являются результатом сложения с блоками открытого текста, чтобы получить зашифрованный текст. Так же, как с другими шифрами потока, зеркальное отражение в зашифрованном тексте производит зеркально отражённый бит в открытом тексте в том же самом местоположении. Это свойство позволяет многим кодам с исправлением ошибок функционировать как обычно, даже когда исправление ошибок применено перед кодированием. Рис. Шифрование в режиме Рис. Расшифрование в режиме Пример работы программы: Исходное изображение: Зашифрованное изображение: Расшифрованное изображение: Процесс распространения ошибок и коэффициент корреляции: Ошибки расшифровки при поврежденном зашифрованном файле: Коэффициент корреляции: Коэффициент крайне мал, это говорит о том, что оригинальная и зашифрованная картинки очень сильно отличаются. Это нам и нужно, поскольку в таком случае дешифрация без знания ключа невозможна. Оценка размера пространства ключей: Длина ключа должна быть достаточно большой, чтобы предотвратить возможность перебора ключа. В алгоритме размер ключа варьируется от бит до следовательно понадобится перебрать от до вариантов, чтобы вскрыть данный шифр. Таким образом, является надёжным шифром. Существующие атаки на алгоритм На данный момент известны две атаки на алгоритм. Сдвиговая атака не представляет опасности для так как была успешно проведена только на упрощенную версию алгоритма(было уменьшено количество раундов и убрана функция Позволяет вычислить использовались ли при шифровании слабые ключи или нет(но не позволяет узнать эти слабые ключи). атака позволяет взламывать и но срабатывает только при больших объёмах данных, измеряемых в гигабайтах(например удалось взломать, проанализировав гб трафика). Вывод: В этой работе был реализован блочный алгоритм шифрования с дополнительным режимом шифрования с помощью языка Несмотря на обнаруженную атаку алгоритм все ещё достаточно хорош для работы с не слишком тяжелыми» данными. Огромный плюс это его скорость(если не генерировать ключи каждый раз). Список литературы: Черчхаус. Коды и шифры С.В. Беззатеев, Е.А. Крук, А.А. Овчинников Блоковые Шифры. Учебное пособие” М.Р. Гильмутдинов, А.М. Тюрликов, Е.М. Линский Цифровая обработка изображений” 