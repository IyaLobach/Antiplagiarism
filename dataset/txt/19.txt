Цель работы: Изучить команды и научиться устанавливать, администрировать сервер на примере сервера и настраивать его параметры безопасности. Используемое программное обеспечение: операционная система Основные сведения: Задача длительного хранения и обработки информации появилась практически сразу с появлением первых компьютеров. Для решения этой задачи в конце х годов были разработаны специализированные программы, получившие название систем управления базами данных СУБД). СУБД проделали длительный путь эволюции от системы управления файлами, через иерархические и сетевые базы данных. В конце х годов доминирующей стала система управления реляционными базами данных СУРБД). С этого времени такие СУБД стали стандартом де-факто, и для того, чтобы унифицировать работу с ними, был разработан структурированный язык запросов который представляет собой язык управления именно реляционными базами данных. Существуют следующие разновидности баз данных: иерархические реляционные объектно-ориентированные гибридные. Иерархическая база данных основана на древовидной структуре хранения информации. В этом смысле иерархические базы данных очень напоминают файловую систему компьютера. В реляционных базах данных данные собраны в таблицы, которые в свою очередь состоят из столбцов и строк, на пересечении которых расположены ячейки. Запросы к таким базам данных возвращает таблицу, которая повторно может участвовать в следующем запросе. Данные в одних таблицах, как правило, связаны с данными других таблиц, откуда и произошло название реляционные". В объектно-ориентированных базах данных данные хранятся в виде объектов. С объектно-ориентированными базами данных удобно работать, применяя объектно-ориентированное программирование. Однако, на сегодняшний день такие базы данных еще не достигли популярности реляционных, поскольку пока значительно уступают им в производительности. Гибридные СУБД совмещают в себе возможности реляционных и объектно-ориентированных баз данных. Эти модели характеризуются простотой структуры данных, удобным для пользователя табличным представлением и возможностью использования формального аппарата алгебры отношений и реляционного исчисления для обработки данных. Понятие реляционный англ. отношение) связано с разработками известного английского специалиста в области систем баз данных Эдгара Кодда Модель реляционной базы данных представляет данные в виде таблиц, разбитых на строки и столбцы, на пересечении которых находятся данные. Кратко особенности реляционной базы данных можно описать следующим образом: Данные хранятся в таблицах, состоящих из столбцов и строк На пересечении каждого столбца и строчки стоит в точности одно значение У каждого столбца есть своё имя, которое служит его названием, и все значения в одном столбце имеют один тип. Например, в столбце все значения имеют целочисленный тип, а в строке текстовый Столбцы располагаются в определённом порядке, который определяется при создании таблицы, в отличие от строк, которые располагаются в произвольном порядке. В таблице может не быть не одной строчки, но обязательно должен быть хотя бы один столбец Запросы к базе данных возвращают результат в виде таблиц, которые тоже могут выступать как объект запросов. Для работы с базами данных используется язык Стандарт определен Однако не является изобретением он продукт исследования фирмы проводимого в начале х годов века. Другие компании и учебные заведения также внесли вклад в создание этого языка, например компания или Калифорнийский университет Беркли. После появления на рынке нескольких конкурирующих продуктов, определил стандарт, которому они должны следовать. Однако введение стандарта породило ряд проблем. В итоге стандарт оказался в некотором смысле ограничен: то, что определено не всегда является наиболее полезным с точки зрения практического применения, поэтому разработчики продуктов стремятся разрабатывать их таким образом, чтобы они соответствовали стандарту но не были им слишком жестко ограниченным. Что опять же приводит к использованию отдельных команд языка специфичных у каждого из разработчиков. При этом наиболее удачные решения нередко заимствуются другими разработчиками и, в свою очередь, также со временем становятся нормой. Поэтому периодически производится уточнение стандарта Первые попытки стандартизировать язык были неудачными: стандарты и принятые соответственно в и годах) недостаточно четко прописывали требования и ограничения, что приводило к значительным расхождениям в реализации различными производителями. Первый реально действующий стандарт был принят в г и известен как В дальнейшем были разработаны и Общие сведения о базе данных Разработчиком популярной базы данных с открытым кодом, является компания В настоящее время компания куплена корпорацией которой и принадлежит теперь продукт. Однако по-прежнему остается базой данных с открытым кодом. Свое происхождение ведет от продукта разработанного в конце х гг. компанией и использовавшемуся для доступа к таблицам, для которых использовались собственные быстрые подпрограммы низкого уровня. Однако после тестирования был сделан вывод, что скорость и гибкость недостаточны. В результате для базы данных был разработан новый интерфейс. Новый продукт получил название Массовое же признание получила, начиная с линейки продуктов версии которые стали широко использоваться на серверах в сети Интернет. В настоящее время используется версия продукта. Ниже приведено описание важных характеристик программного обеспечения Внутренние характеристики и переносимость Написан на и Протестирован на множестве различных компиляторов. Работает на различных аппаратных платформах и разных операционных системах. Высокая производительность за счет максимально оптимизированного кода, эффективной системы распределения памяти и продуманной системы дисковых таблиц. Безопасность Система, основанная на привилегиях и паролях, за счет чего обеспечивается гибкость и безопасность, и с возможностью верификации с удаленного компьютера. Пароли защищены, т.к. они при передаче по сети при соединении с сервером шифруются. Масштабируемость Способность работать с очень большими базами данных десятки и сотни миллионов записей). Возможность кластеризации серверов и распределения обработки информации между серверами Тип ИС закрытого контура в соответствие с вариантом Б Требования к классу защищенности Б: Подсистема управления доступом: Должны осуществляться идентификация и проверка подлинности субъектов доступа при входе в систему по идентификатору коду) и паролю условно-постоянного действия длиной не менее шести буквенно-цифровых символов. Подсистема регистрации и учета: Должна осуществляться регистрация входа выхода) субъектов доступа в систему из системы), либо регистрация загрузки и инициализации операционной системы и ее программного останова. Регистрация выхода из системы или останова не проводится в моменты аппаратурного отключения АС. В параметрах регистрации указываются: дата и время входа выхода) субъекта доступа в систему из системы) или загрузки останова) системы результат попытки входа: успешная или неуспешная при НСД) должен проводиться учет всех защищаемых носителей информации с помощью их маркировки и с занесением учетных данных в журнал учетную карточку). Подсистема обеспечения целостности: Должна быть обеспечена целостность программных средств СЗИ НСД, обрабатываемой информации, а также неизменность программной среды. При этом: целостность СЗИ НСД проверяется при загрузке системы по наличию имен идентификаторов) компонент СЗИ целостность программной среды обеспечивается отсутствием в АС средств разработки и отладки программ во время обработки и или) хранения защищаемой информации должна осуществляться физическая охрана СВТ устройств и носителей информации), предусматривающая контроль доступа в помещения АС посторонних лиц, наличие надежных препятствий для несанкционированного проникновения в помещения АС и хранилище носителей информации, особенно в нерабочее время должно проводиться периодическое тестирование функций СЗИ НСД при изменении программной среды и персонала АС с помощью тест программ, имитирующих попытки НСД должны быть в наличии средства восстановления СЗИ НСД, предусматрива ющие ведение двух копий программных средств СЗИ НСД и их периодическое обновление и контроль работоспособности. Подсистемы и требования Класс Б Подсистема управления доступом Идентификация, проверка подлинности и контроль доступа субъектов: в систему к терминалам, ЭВМ, узлам сети ЭВМ, каналам связи, внешним устройствам ЭВМ к программам к томам, каталогам, файлам, записям, полям записей Управление потоками информации Подсистема регистрации и учета Регистрация и учет: входа выхода) субъектов доступа в из) систему узел сети) выдачи печатных графических) выходных документов запуска завершения) программ и процессов заданий, задач) доступа программ субъектов доступа к защищаемым файлам, включая их создание и удаление, передачу по линиям и каналам связи доступа программ субъектов доступа к терминалам, ЭВМ, узлам сети ЭВМ, каналам связи, внешним устройствам ЭВМ, программам, томам, каталогам, файлам, записям, полям записей изменения полномочий субъектов доступа создаваемых защищаемых объектов доступа Учет носителей информации Очистка обнуление, обезличивание) освобождаемых областей оперативной памяти ЭВМ и внешних накопителей Сигнализация попыток нарушения защиты Криптографическая подсистема Шифрование конфиденциальной информации Шифрование информации, принадлежащей различным субъектам доступа группам субъектов) на разных ключах Использование аттестованных сертифицированных) криптографических средств Подсистема обеспечения целостности Обеспечение целостности программных средств и обрабатываемой информации Физическая охрана средств вычислительной техники и носителей информации Наличие администратора службы) защиты информации в АС Периодическое тестирование СЗИ НСД Наличие средств восстановления СЗИ НСД Использование сертифицированных средств защиты Ход выполнения работы: После установки базы данных можно приступить к работе. Для начала зайдем в командную строку клиента под именем администратора посмотрим, какие базы данных имеются на данный момент. Команда: Рисунок Существующие базы данных Для начала создадим учебную базу данных, на примере которой и будет проводиться вся работа. Назовем её Команда: Рисунок Создание своей базы данных Ещё раз используем команду чтобы удостовериться в том, что база данных была создана. Действительно, в списке появилась новая база данных. Рисунок Новый список баз данных Для работы с конкретной базой данных нужно указать эту самую базу. Команда: Рисунок Выбор базы данных Теперь создадим локального пользователя именем и паролем который будет имитировать обычного работника, которому требуется доступ к базе с информацией. Создание именно локального пользователя требуется для более простой выдачи прав доступа. Дело в том, что для глобального пользователя требуется задавать права доступа на каждой машине, под которой он может подключиться к базе данных, а это не удобно и сильно усложняет работу специалистов ИБ. Команда: Рисунок Создание локального пользователя Далее пользователю требуется выдать права. В качестве примера выдадим пользователю все возможные права. Команда: Рисунок Выдача прав пользователю Проверим, какими правами обладает пользователь. Команда: Как видно из рисунка все в порядке, пользователь имеет все возможные права. Рисунок Права пользователя Теперь требуется подключить созданного пользователя к серверу базы данных. Для этого воспользуемся утилитой и добавим нашего пользователя. Рисунок Создание нового соединения После подключения проверяем и видим, что все в порядке. Теперь у нас есть пользователя: Администратор и локальный пользователь. Рисунок Панель пользователей Для дальнейшей работы нам потребуется заполненная база данных. Для этого создаем таблицу в нашей учебной базе данных и заполняем её данными. Это можно сделать как при помощи учетной записи администратора, так и при помощи учетной записи пользователя, так как мы выдали ему нужные права ранее. В качестве примера будет создана таблица с телефонными номерами. Команда для создания таблицы: Рисунок Создание таблицы Команда для вставки данных: Рисунок Добавление данных Проверим созданную таблицу. Команда: Рисунок Вывод данных из таблицы Таблица создана, теперь требуется выдать пользователю нужные права доступа и протестировать их. Для этого заберем все ранее выданные права и выдадим нужные. Существующие права в Позволяет пользователям создавать базы данных/таблицы Позволяет пользователям делать выборку данных Позволяет пользователям добавлять новые записи в таблицы Позволяет пользователям изменять существующие записи в таблицах Позволяет пользователям удалять записи из таблиц Позволяет пользователям удалять записи в базе данных/таблицах Поскольку наш пользователь является обычным работником и при этом не является привилегированным пользователем, то выдадим ему только права на выборку данных и на добавление новых данных. Остальные права могут нанести вред организации, так как позволяют рядовому пользователю изменять уже существующие данные, удалять как строчки, так и целые таблицы, а также создавать новые таблицы. Команда для удаления прав: Рисунок Удаление существующих прав Команда для выдачи прав: Рисунок Выдача новых прав Команда для проверки прав: Рисунок Проверка существующих прав Теперь можно приступить к работе под учетной записью обычного пользователя. Для этого заходим в консоль пользователя через утилиту После введения пароля используем ранее рассмотренную команду и выводим на экран список доступных баз. Учебная база доступна пользователю. Рисунок Консоль обычного пользователя Попробуем вывести на экран данные о конкретном человеке. Команда: Команда: Рисунок Вывод данных на экран Выведем на экран всю таблицу, но с сортировкой столбца по алфавиту. Команда: Рисунок Отсортированные данные Попробуем применить запрещенную команду. Команда: Рисунок Попытка удаления таблицы Как видно из скриншота, пользователь не смог удалить таблицу, поскольку не имел нужных прав. Можно сделать вывод о том, что учетная запись обычного пользователя была настроена верно, поэтому он не сможет нанести вред организации. В качестве завершения, вернемся в учетную запись администратора и последовательно удалим таблицу, базу данных и локального пользователя. Проверяем существующие таблицы в базе данных. Команда: Рисунок Существующие таблицы Удаляем таблицу. Команда: Рисунок Удаление таблицы Проверяем корректность удаления таблицы. Команда: Рисунок Проверка удаления таблицы Смотрим список существующих баз, удаляем базу и осуществляем проверку удаления. Команда: Команда: Команда: Рисунок Удаление базы данных Удаляем права локального пользователя. Команда: Рисунок Удаление всех прав пользователя Просматриваем список существующих пользователей, удаляем нужного и проверяем корректность удаления. Команда: Команда: Команда: Рисунок Удаление локального пользователя Вывод: В результате выполнения лабораторной работы была проведена установка создана база данных. Назначены и проверены права пользователя по доступу к ресурсам севера базы данных. Настройка параметров безопасности с учетом принятой политики информационной безопасности в организации прав доступа к ресурсам севера базы данных, а именно, права на выборку из всех записей таблицы с целью поиска определенного человека, например, и уточнения его личных данных), и право на добавление новых записей если потребуется клиентскую базу) позволяет повысить уровень защиты базы данных от НСД. Что же касается требования ФСТЭК к классу защищенности Б, ограничения прав пользователей базы данных помогает частично выполнить пункт Обеспечение целостности программных средств и обрабатываемой информации», а именно целостность обрабатываемой информации. 