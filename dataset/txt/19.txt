–¶–µ–ª—å —Ä–∞–±–æ—Ç—ã –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã. 1. –•–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã 1.1. –ü–µ—Ä–≤—ã–µ 30 –∑–Ω–∞—á–µ–Ω–∏–π xi:  –¢–∞–±–ª–∏—Ü–∞ 1 ‚Äì –°–ª—É—á–∞–π–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã  i xi i xi i xi 1 -11.3 11 -11.3 21 42.4 2 -80.1 12 -11.6 22 79.1 3 42.4 13 -11.6 23 -80.1 4 79.1 14 42.4 24 36.2 5 79.1 15 42.4 25 -11.6 6 -11.3 16 36.2 26 -11.3 7 -11.3 17 79.1 27 -11.3 8 -11.3 18 36.2 28 -80.1 9 79.1 19 -80.1 29 42.4 10 79.1 20 -77.2 30 42.4   1.2. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏—Ö –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π M –∏ D: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ M –∏ –¥–∏—Å–ø–µ—Ä—Å–∏—è D –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–∞–º:  –≥–¥–µ K ‚Äì —á–∏—Å–ª–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í. –¢–∞–±–ª–∏—Ü–∞ 2 - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤  –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ ùëÄùëÄ(ùë•ùë•) = 5.5672 ùê∑ùê∑(ùë•ùë•) = 2533.815 ùëÄùëÄ(ùë•ùë•) = 5.50089 ùê∑ùê∑(ùë•ùë•) = 2579.42735 1.3. –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏—Ö –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í:  –ì—Ä–∞—Ñ–∏–∫ 1 - –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í   –í—ã–≤–æ–¥ –í —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±—ã–ª —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π —Å–ª—É—á–∞–π–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω—ã. –ò–∑ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã –≤–∏–¥–Ω–æ, —á—Ç–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–∏—Å–∫—Ä–µ—Ç–Ω–æ–π –°–í —Ö–æ—Ç—å –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π, –Ω–æ –Ω–µ –æ—á–µ–Ω—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ.    –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ê –õ–∏—Å—Ç–∏–Ω–≥ –ø—Ä–æ–≥—Ä–∞–º–º—ã  import java.io.IOException; import java.util.LinkedList;  public class Main {     public static void main(String[] args) throws IOException {         Fibonacci fibonacci = new Fibonacci();         Files files = new Files();         LinkedList<Double> rand = fibonacci.ZRand();         LinkedList<Double> Pmas = new LinkedList<>();         LinkedList<Double> Xmas = new LinkedList<>();         for (int i = 0; i < 7; i++) {             Pmas.add(0.0);         }          LinkedList<Double> xj = new LinkedList<>();         xj.add(-80.1);         xj.add(-77.2);         xj.add(-11.6);         xj.add(-11.3);         xj.add(36.2);         xj.add(42.4);         xj.add(79.1);          LinkedList<Double> pj = new LinkedList<>();         pj.add(0.0);         pj.add(0.079);         pj.add(0.122);         pj.add(0.116);         pj.add(0.205);         pj.add(0.164);         pj.add(0.158);         pj.add(0.156);         files.gistFile2(pj,1);          double exp = 0;         int K = pj.size();         for (int i = 1; i < K; i++) {             exp += pj.get(i) * xj.get(i-1);         }          double variance = 0;         for (int i = 1; i < K; i++) {             variance += (pj.get(i) * Math.pow(xj.get(i-1), 2)) - Math.pow(exp, 2);         }          for (int i = 1; i < pj.size(); i++) {             pj.set(i, (pj.get(i) + (pj.get(i - 1))));         }          for (int i = 0; i < rand.size(); i++) {             for (int j = 0; j < pj.size() - 1; j++) {                 if (pj.get(j) < rand.get(i) && rand.get(i) < pj.get(j + 1)) {                     Pmas.set(j, Pmas.get(j) + 1);                     Xmas.add(xj.get(j));                 }             }         }          for (int i = 0; i < Pmas.size(); i++) {             Pmas.set(i, Pmas.get(i) / rand.size());         }         System.out.println(Pmas);         files.gistFile2(Pmas,2);         System.out.println();          double realExp = 0;          double sum = 0;         for (Double xma : Xmas) {             sum += xma;         }         realExp = sum / Xmas.size();         System.out.println("–ú–∞—Ç. –æ–∂–∏–¥–∞–Ω–∏–µ —Ä–∞–≤–Ω–æ: " + realExp);         System.out.println("–ù–æ—Ä–º–∞ —Ä–∞–≤–Ω–∞: " + exp);         System.out.println("–†–∞–∑–Ω–∏—Ü–∞: " + (realExp - exp));         System.out.println();           double realVariance = 0;          sum = 0;         for (Double xma : Xmas) {             sum += Math.pow(xma - realExp, 2);         }         realVariance = sum / Xmas.size();         System.out.println("–î–∏—Å–ø–µ—Ä—Å–∏—è —Ä–∞–≤–Ω–∞: " + realVariance);         System.out.println("–ù–æ—Ä–º–∞ —Ä–∞–≤–Ω–∞: " + variance);         System.out.println("–†–∞–∑–Ω–∏—Ü–∞: " + (realVariance - variance));          for (int i = 0; i < 30; i++) {             System.out.print(Xmas.get(i) + ",  ");             if (i % 10 == 0) {                 System.out.println();             }         }     } }  