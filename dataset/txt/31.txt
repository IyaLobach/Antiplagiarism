2   1. –¶–µ–ª—å —Ä–∞–±–æ—Ç—ã –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–æ–≤ –¥–ª—è –Ω–µ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º –ø—É—Ç–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–º–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–æ–π —Å–∏—Å—Ç–µ–º—ã. 2. –•–æ–¥ —Ä–∞–±–æ—Ç—ã Œª(t) = ùëõùë°‚àíùëõùë°+‚àÜùë°ùëõùë°‚àó1‚àÜ - —Ñ–æ—Ä–º—É–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞–∑–æ–≤ ()tRteŒª‚àí=- —Ñ–æ—Ä–º—É–ª–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –í —Ç–µ–∫—É—â–µ–π —Ä–∞–±–æ—Ç–µ, Œª1= 0.8 , Œª2= 1.2  , p1= 0.45  , p2= 0.55 , n = 1000000 1. –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–æ–≤ –≤ –ø–µ—Ä–≤–æ–º –ø–µ—Ä–∏–æ–¥–µ 1212()ttRtepepŒªŒª=+ - —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ 121122()ttRtepepŒªŒªŒªŒª‚àí‚àí‚Ä≤=‚àí‚àí ÔÄ§1212112212()ttttepeptepepŒªŒªŒªŒªŒªŒªŒª‚àí‚àí‚àí‚àí=‚àí+- —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞–∑–æ–≤  –†–∏—Å—É–Ω–æ–∫ 1 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Œª –æ—Ç t 3  –†–∏—Å—É–Ω–æ–∫ 2 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ R –æ—Ç t  2. –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–æ–≤ –≤–æ –≤—Ç–æ—Ä–æ–º –ø–µ—Ä–∏–æ–¥–µ 1212()()tttRteeeŒªŒªŒªŒª‚àí‚àí‚àí+==- —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ 12()12()()tRteŒªŒªŒªŒª‚àí+‚Ä≤=‚àí+ 1212()1212()()()()tteteŒªŒªŒªŒªŒªŒªŒªŒªŒª‚àí+‚àí+‚àí+=‚àí=+- —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞–∑–æ–≤   –†–∏—Å—É–Ω–æ–∫ 3 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Œª –æ—Ç t 4  –†–∏—Å—É–Ω–æ–∫ 4 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ R –æ—Ç t 3. –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–æ–≤ –≤ —Ç—Ä–µ—Ç—å–µ–º –ø–µ—Ä–∏–æ–¥–µ 1212()()tttRteeeŒªŒªŒªŒª‚àí‚àí‚àí+=+‚àí- —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ 1212()1212()()tttRteeeŒªŒªŒªŒªŒªŒªŒªŒª‚àí‚àí‚àí+‚Ä≤=‚àí‚àí++ 12121212()1212()()()tttttteeeteeeŒªŒªŒªŒªŒªŒªŒªŒªŒªŒªŒªŒªŒª‚àí‚àí‚àí+‚àí‚àí‚àí+‚àí‚àí++=‚àí+‚àí- —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–∫–∞–∑–æ–≤  –†–∏—Å—É–Ω–æ–∫ 5 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Œª –æ—Ç t 5  –†–∏—Å—É–Ω–æ–∫ 6 - –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ R –æ—Ç t 3. –í—ã–≤–æ–¥ –ë—ã–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–æ–≤ –¥–ª—è –Ω–µ–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã—Ö —Å–∏—Å—Ç–µ–º —Å 3 –ø–µ—Ä–∏–æ–¥–∞–º–∏ –∂–∏–∑–Ω–∏, –ø—É—Ç–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–º–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–∏–æ–¥, –∞ —Ç–∞–∫–∂–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ Œª(t) –∏ R(t). –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—É—é —Ä–∞–∑–Ω–∏—Ü—É, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ö.            6 –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ê –õ–∏—Å—Ç–∏–Ω–≥ –ø—Ä–æ–≥—Ä–∞–º–º—ã public class RIS3 {     int N = 500;      public void Period(int period, double[] lambda, double p, int n) throws IOException {         double[] T = T(lambda, p, period, n);          LinkedList<Double> expLambda = new LinkedList<>();         LinkedList<Double> expRt = new LinkedList<>();          LinkedList<Double> theorLambda = new LinkedList<>();         LinkedList<Double> theorRt = new LinkedList<>();          double Tm = 0;         for (double t : T) {             Tm += t;         }          Tm /= T.length;         double dt = Tm / N;         double nt, nt_dt, R1, R2, Rt, RDt;          for (double t = 0; t < Tm; t += dt) {             nt = nt(T, t);             nt_dt = nt(T, t + (0.1 * dt));              expLambda.add((nt - nt_dt) / (nt * dt * 0.1));             expRt.add(nt / n);              R1 = Ri(lambda[0], t);             R2 = Ri(lambda[1], t);             Rt = 0;              if (period == 1) {                 Rt = R1 * p + R2 * (1 - p);                 RDt = (-lambda[0] * R1 * p - lambda[1] * R2 * (1 - p));                 theorLambda.add(-RDt / Rt);             }             else if (period == 2) {                 Rt = R1 * R2;                 theorLambda.add(lambda[0] + lambda[1]);             }             else if (period == 3) {                 Rt = R1 + R2 - R1 * R2;                 RDt = ((-lambda[0] * R1 - lambda[1] * R2) + (lambda[0] + lambda[1]) * R1 * R2);                 theorLambda.add(-RDt / Rt);             }             theorRt.add(Rt);         }         writeIntoFile("expLambda‚Ññ" + period + ".txt", expLambda, dt);         writeIntoFile("expRt‚Ññ" + period + ".txt", expRt, dt);         writeIntoFile("theorLambda‚Ññ" + period + ".txt", theorLambda, dt);         writeIntoFile("theorRt‚Ññ" + period + ".txt", theorRt, dt);     }      public double Ri(double lambda, double t) {         return exp(-lambda * t);     } 7      public double[] T(double[] lambda, double p, int period, int n) {         double[] T = new double[n];         for (int i = 0; i < n; i++) {             if (period == 1)                 T[i] = -log(random() / ((i < p * n) ? lambda[0] : lambda[1]));             else if (period == 2)                 T[i] = min(-log(random() / lambda[0]), -log(random() / lambda[1]));             else if (period == 3)                 T[i] = max(-log(random() / lambda[0]), -log(random() / lambda[1]));         }         return T;     }      public int nt(double[] T, double t) {         int nt = 0;         for (double i : T) {             if (t < Math.abs(i))                 nt++;         }         return nt;     }      public double rnd() {         return new Fibonacci().ZRand().get(5);     }      public void writeIntoFile(String filename, LinkedList<Double> arr, double dt) throws IOException {         File file = new File(filename);         FileWriter writer = new FileWriter(file);         double t = 0;         for (Double a : arr) {             writer.append(Double.toString(t)).append(" ").append(Double.toString(a)).append("\n");             t += dt;         }         writer.flush();         writer.close();     } }  