Цель работы: найти реализацию алгоритма хэширования ГОСТ Р Найти второй прообраз и коллизии, а также построить графики зависимости среднего значения сложности второго прообраза и коллизии от количества взятых бит. Оценить полученные графики. Описание алгоритма Преобразования преобразование На вход функции подаются две последовательности длиной бит каждая, выходом функции является этих последовательностей: преобразование Функция является функцией подстановки. Каждый байт из битной входной последовательности заменяется соответствующим байтом из таблицы подстановок Значения подстановки записаны ниже в виде массива преобразование Функция перестановки. Для каждой пары байт из входной последовательности происходит замена одного байта другим. Значения перестановки записаны ниже в виде массива преобразование Представляет собой умножение битного входного вектора на бинарную матрицу размерами Функция сжатия Основным элементом любой хэш-функции является функция сжатия. Функция сжатия в виде алгоритма описывается следующим образом: Пусть и битные последовательности. Для вычисления необходимо: В качестве результата возвращается Вычисление приведено ниже и включает следующие действия: Для до выполнить: В качестве результата возвращается Формирование временного ключа на каждом раунде функции осуществляется функцией и включает следующие вычисления: В качестве результата возвращается Вычисление хэш-функции Теперь опишем процедуру формирования хеш-значения. Для любого входного сообщения Инициализация значений переменных: для бит для бит Проверка размера Если условие выполняется, то переход к пункту Иначе выполнить следующие шаги: последние бит сообщения без последних бит Этот шаг повторяется до тех пор, пока Далее сообщение дополняется до длины по следующему правилу: где длина сообщения в битах. Для хэш-функции с длиной хэш-кода бит возвращается в качестве результата. Для хэш-кода бит возвращается Описание реализации Необходимо придумать слово-пароль, которое является исходным сообщением найти от него взять от полученного хэша первые бит, обозначив последовательность Далее случайным образом сгенерировать сообщений, найти от каждого хэш и взять от каждого хэша первые бит, получив последовательность Нахождение второго прообраза. Необходимо найти такой что Посчитать количество шагов, которое потребовалось, чтобы найти это сложность второго прообраза. Нахождение коллизий. Необходимо найти в полученной последовательности такие Посчитать количество шагов, которое потребовалось, чтобы найти эту пару это сложность коллизии. Проделать оба шага для последовательности хэшей размером и бит. Необходимо построить графики зависимости среднего значения сложности второго прообраза и коллизии от количества взятых бит. Источник кода За основу был взят код Примеры работы программы Для начала необходимо проверить, что хэш-код, вычисляемый программой, совпадает с хэш-кодом из стандарта. В стандарте приведен следующий пример: Был получен следующий хэш-код длиной Был получен следующий хэш-код длиной В результате работы программы были получены: Как видно, хэш-коды совпадают. Далее необходимо построить графики. За слово пароль взято Хэш-код длины равен: В результате шагов, описанных ранее шагов были получены следующие графики: Исходя из графиков, можно сделать вывод, что зависимости сложностей от бит растут прямо пропорционально. Для бит средняя сложность коллизии уже достаточно велика и далее также разрыв будет увеличиваться. Выводы Настоящий стандарт определяет алгоритм и процедуру вычисления хеш-функции для любой последовательности двоичных символов, которые применяются в криптографических методах обработки и защиты информации, в том числе для реализации процедур обеспечения целостности, аутентичности, электронной цифровой подписи ЭЦП) при передаче, обработке и хранении информации в автоматизированных системах. Определенная в настоящем стандарте функция хэширования используется при реализации систем электронной цифровой подписи на базе ассиметричного криптографического алгоритма по ГОСТ Р Список используемых источников: Стандарт ГОСТ Р Электронный ресурс] дата обращения: Хэш-функция Стрибог Электронный ресурс] дата обращения: 