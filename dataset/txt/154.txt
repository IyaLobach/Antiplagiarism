1  Цель работы: для выбранного варианта задания выбрать множество базисных функций, проверить ортонормированность для выбранного множества базисных функций, построить множество сигнальных точек, построить разбиение сигнального пространства на решающие области. Исходные данные для 4 варианта КАМ 𝑓0 = 2400 Гц 𝑉𝑚𝑜𝑑 = 600 Бод 𝑉𝑖𝑛𝑓 = 2400 б/с  1. Базис для геометрического представления сигналов КАМ 𝜑1(𝑡)={√2𝑇cos⁡(2𝜋𝑓0𝑡),0<𝑡<𝑇0,иначе  𝜑2(𝑡)={√2𝑇sin⁡(2𝜋𝑓0𝑡),0<𝑡<𝑇0,иначе  Данные функции образуют базис размерности 𝐷=2. 2. Проверка ортонормированности выбранных функций.  Пусть {𝑠𝑖(𝑡)}⁡– множество сигналов, определенных на конечном интервале [0;𝑇], где 𝑇 – период следования сигналов,⁡𝑖=0,1,…𝑞−1. Для множества сигналов {𝑠𝑖(𝑡)}⁡ можно указать множество ортонормированных функций {𝜑𝑗(𝑡)}, определенных на интервале [0;𝑇], 𝑗=1,2,…𝐷, то есть таких, для которых выполняется условие  (𝜑𝑗,𝜑𝑘)=⁡∫𝜑𝑗(𝑡)𝜑𝑘(𝑡)𝑑𝑡⁡=⁡{1,𝑗=𝑘0,𝑗≠𝑘𝑇0 Проверим ортогональность: (𝜑1,𝜑2)=⁡∫𝜑1(𝑡)𝜑2(𝑡)𝑑𝑡⁡=⁡∫√2𝑇cos(2𝜋𝑓0𝑡)√2𝑇sin(2𝜋𝑓0𝑡)𝑑𝑡=⁡𝑇0𝑇0   2  =2𝑇∫cos(2𝜋𝑓0𝑡)sin(2𝜋𝑓0𝑡)𝑑𝑡=sin2(2𝜋𝑓0𝑡)𝑇2𝜋𝑓0|0𝑇=⁡𝑇0sin2(2𝜋𝑓0𝑇)𝑇2𝜋𝑓0−⁡sin2(2𝜋𝑓00)𝑇2𝜋𝑓0=⁡sin2(2𝜋𝑓0𝑇)𝑇(2𝜋𝑓0𝑇)⁡ При условии, что 𝑓0𝑇=𝑙, где 𝑙−⁡целое число, получаем (𝜑1,𝜑2)=0. Таким образом, условие ортогональности соблюдается. Проверим условие нормировки: (𝜑1,𝜑1)=⁡∫𝜑12(𝑡)𝑑𝑡⁡=⁡2𝑇∫cos2(2𝜋𝑓0𝑡)𝑑𝑡=⁡sin⁡(4𝜋𝑓0𝑡)4𝜋𝑓0𝑇𝑇0𝑇0+𝑡𝑇|0𝑇= =⁡sin⁡(4𝜋𝑓0𝑇)4𝜋𝑓0𝑇+1−sin(4𝜋𝑓00)4𝜋𝑓0𝑇=⁡sin⁡(4𝜋𝑓0𝑇)4𝜋𝑓0𝑇+1⁡ При условии, что 𝑓0𝑇=𝑙, где 𝑙−⁡целое число, получаем (𝜑1,𝜑1)=1.  Аналогично проверим вторую функцию: (𝜑2,𝜑2)=⁡∫𝜑22(𝑡)𝑑𝑡⁡=⁡2𝑇∫𝑠𝑖𝑛2(2𝜋𝑓0𝑡)𝑑𝑡=⁡−sin⁡(4𝜋𝑓0𝑡)4𝜋𝑓0𝑇𝑇0𝑇0+𝑡𝑇|0𝑇= =⁡−sin(4𝜋𝑓0𝑇)4𝜋𝑓0𝑇+1+sin(4𝜋𝑓00)4𝜋𝑓0𝑇=⁡1⁡ Отсюда следует, что выбранные функции действительно ортогональны и нормированы, а значит являются ортонормированным базисом. Проверка ортонормированности в программе:  3. Построение множества сигнальных точек.  Коэффициенты разложения 𝑠𝑖𝑗⁡представляют собой вещественные числа, которые вычисляются как скалярные произведения сигнала 𝑠𝑖(𝑡) и базисной функции 𝜑𝑗(𝑡), то есть  3  𝑠𝑖𝑗=(𝑠𝑖,𝜑𝑗)=⁡∫𝑠𝑖(𝑡)𝜑𝑗(𝑡)𝑑𝑡𝑇0 График сигнального созвездия представлен ниже.  График 1 - Сигнальное созвездие 4. Построение разбиения сигнального пространства на решающие области.  График 2 - Разделение на решающие области 4  Имеем в виду, что все сигналы сигнального множества передаются равновероятно, то есть 𝑃𝑖=1𝑞. В таком случае каждая решающая область 𝑅𝑖⁡состоит из точек сигнального пространства, расстояние от которых до сигнальной точки 𝑠𝑖 меньше, чем расстояние до любой другой сигнальной точки 𝑠𝑘.  Вывод: в ходе выполнения лабораторной работы были выбраны функции 𝜑1(𝑡)⁡и⁡𝜑2(𝑡), образующие ортонормированный базис размерности 𝐷=2. Построено множество сигнальных точек и разбиение сигнального пространства на решающие области. Листинг программы: clc clear all f0 = 2400; Vmod = 600; Vinf = 2400; T = 1/Vmod; m = Vinf/Vmod; q = 2^m;   i1 = zeros(1, q); i2 = zeros(1, q); s1 = zeros(1, q); s2 = zeros(1, q); val = 0; A = 3; indx = 0; step = T/1000; t = 0:step:T;   %расчет индексов для КАМ for j=1:1:q     i1(j) = val;     indx = indx + 1;     if(indx == A+1)         indx = 0;         val = val +1;     end     i2(j) = mod(j-1,A+1);          s1(j) = A * (1 - (2*i1(j))/(sqrt(q)-1));     s2(j) = A * (1 - (2*i2(j))/(sqrt(q)-1)); end   5  Signals = @(n,t) ((s1(n)*sqrt(2/T)*cos(2*pi*f0*t))+ (s2(n)*sqrt(2/T)*sin(2*pi*f0*t))); phi1 = @(t) sqrt(2/T)*sin(2*pi*f0*t); phi2 = @(t) sqrt(2/T)*cos(2*pi*f0*t); si1(j) = integral(@(t) Signals(j-1,t).*phi1(t), 0, T); si2(j) = integral(@(t) Signals(j-1,t).*phi2(t), 0, T);   %расчет координат for n=1:1:q     si1(n) = integral(@(t) Signals(n,t).*phi1(t), 0, T);     si2(n) = integral(@(t) Signals(n,t).*phi2(t), 0, T); end     %вывод сигнального созвездия figure(1); plot(si1(:),si2(:), '.', 'MarkerSize', 20);   % вывод разбиения сигнального пространства на решающие области figure(2); plot(si1(:),si2(:), '.', 'MarkerSize', 20); hold on; for n = -4:2:4     line ([n n], [-4 4]);     line ([-4 4], [n n]); end hold off;   %Проверка ортонормированнсти res12 = trapz(t, phi1(t).*phi2(t)); res11 = trapz(t, phi1(t).*phi1(t)); res22 = trapz(t, phi2(t).*phi2(t)); disp('Проверка ортонормированнсти:'); disp('ортогональность:S') disp(['(phi1,phi2) = ', num2str(res12)]); disp(['округленно(phi1,phi2) = ', num2str(fix(res12))]); disp('норма:') 6  disp(['(phi1,phi1) = ', num2str(res11)]); disp(['(phi2,phi2) = ', num2str(res22)]);  