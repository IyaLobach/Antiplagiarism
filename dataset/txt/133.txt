2  1. Цель работы:  Смоделировать работу оптимального приёмника дискретных сигналов в канале с аддитивным белым гауссовским шумом. Найти теоретическую и экспериментальную зависимость вероятности ошибки от отношения сигнал-шум.  2. Исходные данные:  Вариант III.6, КАМ 𝑓!=	1800	Гц; 𝑉мод=1200	Бод; 𝑉инф=	4800	бит/с; 𝑓! – несущая частота, 𝑉мод – скорость модуляции, 𝑉инф – скорость информации 3. Теоретическое описание    Сигнал на выходе канала с аддитивным белым гауссовским шумом (АБГШ) имеет вид 𝑟(𝑡)=𝑠(𝑡)+𝑛(𝑡), где 𝑠(𝑡)∈{𝑠((𝑡)} , n(t) –АБГШ со спектральной плотностью мощности 𝑁!/2. Задача приемника состоит в определении номера переданного сигнала по принятому сигналу r(t). Пусть 𝚤̂ – решение, принятое приемником относительно номера переданного сигнала, 𝚤 ̂= 0, 1, …, q-1. При этом возможно, что решение приемника будет ошибочным, то есть 𝑖≠𝚤.̂ Оптимально построенный приемник обеспечивает наименьшую вероятность ошибки 𝑃)=Pr	[?̂?≠𝑖].       Выберем базис {𝜑*(𝑡)}, j = 1,…, D, для представления сигналов. Тогда вместо множества сигналов {𝑠((𝑡)} можно рассматривать множество D-мерных вещественных сигнальных векторов (сигнальных точек) {𝑠(}, где 𝑠( = (𝑠(+,…,𝑠(,) и 𝑠(*=I𝑠(,𝜑*K=∫𝑠((𝑡)𝜑*(𝑡)𝑑𝑡-! – скалярное произведение i-го сигнала и j-ой базисной функции, j = 1,…, D. Аналогично можно построить разложение принятого сигнала r(t) по базисным функциям 𝑟=(𝑟+	,…,𝑟,), где 𝑟*=I𝑟*,𝜑*K=∫𝑟(𝑡)𝜑*(𝑡)𝑑𝑡-!. Очевидно, что r = s + n, где 𝑛=(𝑛+,…,𝑛,) и 𝑛*=I𝑛,𝜑*K=∫𝑛(𝑡)𝜑*(𝑡)𝑑𝑡-! – скалярное произведение шума и j-ой базисной функции.     Решение принимается по правилу:  если	𝑟∈𝑅(,то	𝚤̂=𝑖    3  4. Моделирование работы оптимального приёмника  Процесс моделирования состоит в многократном выполнении следующих шагов:  – случайный равновероятный выбор номера сигнала i = − 0,1,..., q - 1, подлежащего передаче;   – получение сигнала r(t) на выходе канала согласно равенству 𝑟(𝑡)=𝑠((𝑡)+𝑛(𝑡) , где n(t) – АБГШ со спектральной плотностью мощности 𝑁!/2;   – вычисление вектора функциям 𝑟=(𝑟+	,…,𝑟,) с компонентами 𝑟*=I𝑟*,𝜑*K=∫𝑟(𝑡)𝜑*(𝑡)𝑑𝑡-!;   – фиксации результата: если 𝚤̂=𝑖, то решение на приемной стороне сформировано неправильно, и нужно увеличить счетчик числа ошибок.  Формула вероятности ошибки для КАМ: 𝑃)=4IR𝑞−1K𝑞𝑄(V3𝐸Y𝑁!1𝑞−1)(R𝑞−(R𝑞−1)𝑄(V3𝐸Y𝑁!1𝑞−1))	 5. Результат моделирования     Рис.1 – Облако рассеяния для 4dB 4    Рис.2 – Облако рассеяния для 8dB 5   Рис.3 – Облако рассеяния для 16dB На рисунках 1, 2 и 3 представлено количество точек при 4 дБ, 8дБ и 16 дБ изменилось, т.к. при увеличении SNR уменьшается вероятность возникновения ошибки и, следовательно, увеличивается вероятность того, что сигнал пройдет проверку. Красным цветом отображается попадание точек в заданную область, синим цветом – отклонение от решающей области. 6   Рис.3 Экспериментальная и теоретическая зависимость вероятности ошибки от отношения сигнал-шум По графику, изображенному на рисунке 3 следует, что теоретические и экспериментальные значения вероятности схожи. 6. Вывод  В ходе лабораторной работы была промоделирована работа оптимального приёмника дискретных сигналов в канале с белым аддитивным белым гауссовским шумом.  • Был получен сигнал r(t) на выходе приёмника и вычислен вектор r • Было произведено формирование решения 𝚤 ̂и фиксация результата • Была произведена оценка вероятности ошибки теоретическим и экспериментальным путём, соответственно моделирование посчитано верно.  • При увеличении SNR уменьшается вероятность возникновения ошибки и следовательно увеличивается вероятность того, что сигнал пройдет проверку, количество точек на графике увеличивается.  7   7. Код программы  clc; clear; close all; f0 = 1800; Vmod = 1200; Vinf = 4800; T = 1/Vmod; m = Vinf * T; q = 2^m;   Ns = 100;  dt = (1/f0)/Ns; t = 0:dt:T;  f = 0:10:8000; nfig = 1; A = 1; count = 0; si1=zeros(q,1); si2=zeros(q,1); x = zeros(q, length(t)); s = zeros(q,length(t));     for i1 = 0 : 3     for i2 = 0 : 3          count = count + 1;         si1(count) = A*(1-((2*i1)/(sqrt(q)-1)));         si2(count) = A*(1-((2*i2)/(sqrt(q)-1)));         s(count,:) = (si1(count)*sqrt(2/T)*cos(2*pi*f0*t)) +(si2(count)*sqrt(2/T)*sin(2*pi*f0*t));%линейная комбинация базисных функций??         x = i1;     end end f1=sqrt(2/T)*cos(2*pi*f0*t); f2=sqrt(2/T)*sin(2*pi*f0*t); scalar11=round(sum(f1.*f1)*dt); scalar12=round(sum(f1.*f2)*dt); scalar22=round(sum(f2.*f2)*dt); disp(['(f1,f1) = ', num2str(scalar11)]); disp(['(f1,f2) = ', num2str(scalar12)]); disp(['(f2,f2) = ', num2str(scalar22)]);  % коэффициенты разложения sij1=zeros(q,1); sij2=zeros(q,1); for c = 1:q     sij1(c)=sum(s(c,:).*f1)*dt;     sij2(c)=sum(s(c,:).*f2)*dt;  end figure(1) plot(sij1(:),sij2(:), '.', 'MarkerSize',15); hold on; axis([1.5 * min(sij1(:)), 1.5 * max(sij1(:)), 1.5 * min(sij2(:)),1.5 * max(sij2(:))]);%выделяем область title("Сигнальное созвездие");     figure(2) for c = 1:q     plot(sij1(c), sij2(c),'.','MarkerSize', 20);     hold on; end grid on; Ydb=1:1:18; % СНР, соотношение в децибелах E=sum(s.^2)/q;% значение средней энергии Pe=zeros(1,length(Ydb)); Pe_t=zeros(1,length(Ydb)); for i=1:length(Ydb)     Y=10^(Ydb(i)/10); % переводим значение из дцб в обычное соотношение (шум/сигнал)     sigma=sqrt(sum(E/(2*Y)));     Nerr =0 ;      Ntest= 0 ;      NerrMax = 50; % макс колво ошибок     while Nerr<NerrMax          ind=randi(16); % выбираем случайный сигнал         r=s(ind,:)+sigma.*randn(1,length(s(ind,:))); % сигнал на входе канала, radn - массив с.в. распредленных по нормальному закону         r1=sum(r.*f1)*dt;% разложение по базису f1 f2 8          r2=sum(r.*f2)*dt;                 i_=0;         min=1000000000;         % строим решение по минимальному расстоянию         for k=1:q                d=sqrt((r1-sij1(k))^2+(r2-sij2(k))^2);                if d < min                    min=d;                    i_=k; % индекс минимального запоминаем                end         end                        if i_ ~= ind            Nerr=Nerr+1; % увеличиваем количество ошибки         end         if(i == 8)              if i_ ~= ind                 plot(r1, r2, 'b.','MarkerSize', 10);                 hold on;                 axis square;             else                  plot(r1, r2, 'r.','MarkerSize', 10);                 hold on;                 axis square;             end          end          Ntest=Ntest+1;     end       Pe(i)=Nerr/Ntest; % вероятность практической ошибки     N0 = E/Y; % мощность шума     Pe_t(i)=4*(sqrt(q)-1)/q*qfunc(sqrt(3*E/(N0*(q-1))))*(sqrt(q)-(sqrt(q)*qfunc(sqrt(3*E/(N0*(q-1))))));%теоретическая ошибка end     figure(3); semilogy(Ydb, Pe_t, 'black-', Ydb, Pe, 'red.-', 'MarkerSize', 10); legend('Теоритическая оценка','Экспериментальные данные'); grid on xlabel('Ydb'); ylabel('P_E'); function [y]=qfunc(x)     mfun=@(tt)exp(-tt.^2/2);    y=(1/(sqrt(2*pi)))*integral(mfun,x,Inf); end  