Задача Вариант Реализовать алгоритм шифрования предусмотреть возможность работы алгоритма в режиме Описание алгоритма Процедура расширения ключа Процедура расширения ключа формирует битных подключей для использования их в раундах алгоритма и для выполнения операций отбеливания. Алгоритм использует ключи шифрования любого размера до битов включительно. Исходный ключ, при необходимости, дополняется нулевыми битами до ближайшего стандартного размера(128, Процедура расширения ключа обрабатывает дополненный таким образом ключ. Предварительная обработка ключа. Инициализация переменных: размер дополненного ключа шифрования в битах Ключ шифрования представляется в виде байтов или в виде битных слов, обозначаемых как Формируются массива, каждый из которых состоит из битных слов: массив четных слов массив нечетных слов где: Матрица М2 представлена в приложении Генерация подключей К0…К39 производится на основе вычисленных на предварительном этапе массивов и о следующим образом(рис.1): Рисунок Генерация подключей Функция выполняется в несколько шагов, количество которых зависит от размера дополненного ключа в битных фрагментах, т.е. от описанного выше значения к. В качестве параметров функция принимает битное слово и массив битных слов размерностью к(Ме). Алгоритм функции рис.2): Рисунок Алгоритм функции Матрица М1 представлена в приложении Выполняется, если к меньше Не выполняется, если к равен Операции и вычисляют выходные значения с использованием нескольких таблиц замен х4 следующим образом(рис.3): Рисунок Операции и где и входное и выходное значения соответственно, табличные замены, различные для и таблицы замен представлены в приложении Алгоритм разбивает шифруемые данные на четыре битных субблока(A, над которыми производится раундов преобразований, в каждом из которых выполняются следующие операции(рис.4): Рисунок Структура алгоритма Перед первым раундом выполняется входное отбеливание с использованием подключей К0…К3, после заключительного раунда выполняется выходное отбеливание с использованием подключей К4…К7. В конце каждого раунда, за исключением последнего, субблоки А(до обработки) и С меняются местами, субблоки В(до обработки) и также меняются местами. Операция представляет собой описанную ранее функцию использующую в качестве входного значения битный субблок А или В, а в качестве входного массива описанный ранее массив Описание режима шифрования Режим обратной связи вывода превращает блочный шифр в синхронный шифр потока: он генерирует ключевые блоки, которые являются результатом сложения с блоками открытого текста, чтобы получить зашифрованный текст. Зеркальное отражение в зашифрованном тексте производит зеркально отражённый бит в открытом тексте в том же самом местоположении. Это свойство позволяет многим кодам с исправлением ошибок функционировать как обычно, даже когда исправление ошибок применено перед кодированием. Рисунок Шифрование в режиме Рисунок Расшифрование в режиме Описание реализации При запуске программы вне зависимости от выбранного режима работы генерируется ключ. Если выбран режим шифрования генерируется вектор инициализации. Затем данные кодируются в соответствии с выбранным режимом и записываются в новый файл. После этого данные расшифровываются и записываются в новый файл. Примеры Шифрование и расшифрование текстового файла: Сгенерированный ключ: Рисунок Исходный файл Рисунок Зашифрованный файл Рисунок Расшифрованный файл Шифрование и расшифрование файла Сгенерированный ключ: Рисунок Исходное изображение Рисунок Зашифрованное изображение Рисунок Расшифрованное изображение Если зашифрованный файл будет как-либо повреждён рис. то и дешифрованный файл будет отличаться от исходного рис. Рисунок Поврежденное зашифрованное изображение Рисунок Поврежденное расшифрованное изображение Шифрование и расшифрование файла Сгенерированный ключ: Сгенерированный вектор инициализации: Исходное изображение представлено на рис.10. Рисунок Зашифрованное изображение Результат расшифрования данного изображения аналогичен результату, предоставленному на рис.12. Коэффициент корреляции для входного и выходного потока Вычислим коэффициент корреляции для красной компоненты исходного и закодированного изображений. Формула для подсчета коэффициента корреляции представлена ниже: где и компоненты изображения оценка математического ожидания в соответствии с формулой: А и В оценки среднеквадратичного отклонения компонент А и вычисляемого по формуле: По результатам вычислений коэффициент корреляции для красной компоненты исходного и закодированного изображений составил Оценка распределения и в выходном потоке Оценим распределение и на примере зашифрованного изображения, представленного на рисунке Выводы Реализован алгоритм шифрования а также режим шифрования Было выяснено, что использование режима шифрования позволяет улучшить качество шифрования данных. Вычислен коэффициент корреляции. Оценено распределение и в выходном потоке. Достоинства алгоритма: эффективно реализуем аппаратно и в условиях ограниченных ресурсов Зашифровывание и расшифровывание в алгоритме практически идентичны Поддержка расширения ключа на лету» лучшая по результатам конкурса Несколько вариантов реализации позволяют оптимизировать алгоритм для конретных применений. Недостатки алгоритма: Сложность структуры алгоритма затрудняет его анализ Сложная и медленная процедура расширения ключа Относительно сложно защищается от атак по времени выполнения и потребляемой мощности Распараллеливание вычислений при шифровании алгоритмом реализуемо с ограничениями. Список литературы С.П., Панасенко. Алгоритмы шифрования. Специальный справочник. Санкт-Петербург БХВ- Петербург, А.Л., Чмора. Современная прикладная криптография. б.м. Гелиос АРВ, Приложение Во всех таблицах, представленных в данном приложении, указаны шестнадцатеричные значения. Таблица Матрица М1 Таблица Матрица М2 Таблица Таблица замен для Таблица Таблица замен для 