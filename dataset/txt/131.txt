Цель работы: Получить навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019. Создать программу с использованием Windows Forms на языках С#, С++, C. Часть 1. (выполняется на языке C.C++)  Задание к лабораторной работе: 1) реализовать алгоритм преобразования информации с использованием логических выражений в соответствии с вариантом задания из ЛАБОРАТОРНОГО ПРАКТИКУМА «Программирование задач по обеспечению информационной безопасности» (варианты, помеченные знаком «*», имеют повышенную сложность); 2) выполнить проверку на допустимость значений используемых переменных;  3) при описании переменных применить регистровый класс памяти.  Вариант 1.  Задание: Реализовать механизм шифрования и расшифрования символьной информации с применением операции инверсии ~. Ход работы: 1) Считать строку из консоли в переменную типа string 2) Реализовать проверку на ввод пустой строки.  3) Создать функции шифрования и расшифрования, с возвращаемым значением типа char.  4) С помощью цикла зашифровать каждый символ строки и вывести на консоль.  5) С помощью цикла расшифровать каждый символ строки и вывести на консоль Листинг кода: #include <iostream> #include <string> using namespace std; //подпрограммы шифрования и расшифрования char fun_cipher(char simbol) { return ~simbol; } char fun_decipher(char simbol) { return ~simbol; } int main() {  register string str;  // вывод строки на консоль  cout << "Enter the string: " << endl;  // считывание строки из консоли в переменную str  getline(cin, str);  // проверка на ввод пустой строки  bool flag = 0;  if (str == "") { flag = 1; }  if (flag == 1) {   cout << "ERROR!" << endl;  }  else {   // перевод курсора на новую строку (endl) и вывод на //консоль "cipher:"   cout << endl << "cipher: ";   // в цикле каждый символ переменной str шифруется   // и выводится на консоль   for (register int i = 0; i < str.length(); i++) {    str[i] = fun_cipher(str[i]);    cout << str[i];   }   cout << endl << "decode cipher: ";   for (register int i = 0; i < str.length(); i++) {    str[i] = fun_decipher(str[i]);    cout << str[i];   }   cout << endl;  }  // Чтобы программа не завершалась сразу, а ждала нажатия // какойлибо клавиши  system("pause");  return 0; }  Тесты:  Рисунок 1 – Тест 1  Рисунок 2 – Тест 2  Рисунок 3 – Тест 3 Часть 2. (выполняется на языке C#) Задание:  1) Создать консольный и Windows Forms проекты. выполняющие, поразрядное сложение двух строк (вашей фамилии и имени) с выводом промежуточных результатов. 2) Создать программу, выполняющую персональное задание в соответствии с вариантом. 1) Дано натуральное число: • Найти произведение цифр этого числа; • Определить, верно ли, что в данном числе нет заданной цифры А (цифра А вводится с клавиатуры). 2) Найти все трехзначные числа, которые при увеличении на 1 делятся на 2, при увеличении на 2 делятся на 3, при увеличении на 3 делятся на 4, а при увеличении на 4 делятся на 5. Вариант 2. Ход работы задания 1:  1) Считать имя и фамилию из текст-бокса в переменную типа string 2) Привести переменную к массиву типа char 3) Если имя и/или фамилия не введены, вывести сообщение об ошибке 4) С помощью цикла проходить по каждому символу, вывести его юникод 5) Проверить длиннее имя или фамилия, чтобы верно вывести хвост и сложить символы, вывести юникод и результаты суммы Листинг кода консольного проекта: using System;  namespace ConsoleApp1 {     class Program     {         static void Main(string[] args)         {             Console.WriteLine("Enter your name: ");             string name = Console.ReadLine();             Console.WriteLine("Enter your surname: ");             string fullName = Console.ReadLine();              char[] charName = name.ToCharArray();             char[] charFullName = fullName.ToCharArray();              int[] unicodeName = new int[name.Length];             int[] unicodeFullname = new int[fullName.Length];              if (fullName.Length == 0 || name.Length == 0)             {                 Console.WriteLine("ERROR!");             }             else             {                 if (fullName.Length >= name.Length)                 {                     int[] text = new int[fullName.Length];                     for (int i = 0; i < name.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         unicodeName[i] = (int)charName[i];                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = n;                     }                     Console.WriteLine("\nTail: ");                     for (int i = name.Length; i < fullName.Length; i++)                     {                         Console.Write(fullName[i]);                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = charFullName[i];                     }                      Console.WriteLine("\nUnicode Surname: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write(fullName[i] + " = " + (int)unicodeFullname[i] + "\n");                     }                      Console.WriteLine("\nUnicode name: ");                     for (int i = 0; i < name.Length; i++)                     {                         Console.Write(name[i] + " = " + (int)unicodeName[i] + "\n");                     }                      Console.WriteLine(" \nResult: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((char)text[i]);                     }                 }                 else                 {                     char[] text = new char[name.Length];                     for (int i = 0; i < fullName.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         unicodeName[i] = (int)charName[i];                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = (char)n;                     }                     Console.WriteLine("\nTail: ");                     for (int i = fullName.Length; i < name.Length; i++)                     {                         Console.Write(name[i]);                         unicodeName[i] = (int)charName[i];                         text[i] = charName[i];                     }                      Console.WriteLine("Unicode Surname: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write(fullName[i] + " = " + (int)unicodeFullname[i] + "\n");                     }                      Console.WriteLine("\nUnicode name: ");                     for (int i = 0; i < name.Length; i++)                     {                         Console.Write(name[i] + " = " + (int)unicodeName[i] + "\n");                     }                      Console.WriteLine(" \nResult: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((char)text[i]);                     }                 }             }         }     } } Тесты:  Рисунок 4 – Тест 1  Рисунок 5 – Тест 2  Рисунок 6 – Тест 3  Листинг кода Windows Forms проекта: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  namespace WindowsFormsApp1_imya_familiya {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();         }          private void label1_Click(object sender, EventArgs e)         {                      }          private void textBox1_TextChanged(object sender, EventArgs e)         {               }          private void button1_Click(object sender, EventArgs e)         {             string name = textBox1.Text;             string fullname = textBox2.Text;             char[] char_name = name.ToCharArray();             char[] char_fullname = fullname.ToCharArray();             textBox3.Text = "";             textBox4.Text = "";             textBox5.Text = "";             if ((name == null) || (fullname == null) || (name == "") || (fullname == "")) { textBox4.Text += "ERROR!"; }             else             {                 for (int i = 0; i < char_name.Length; i++)                 {                     int b = char_name[i];                     textBox4.Text += char_name[i] + " = " + b + "\r\n ";                     b = 0;                 }                 for (int i = 0; i < char_fullname.Length; i++)                 {                     int b = char_fullname[i];                     textBox4.Text += char_fullname[i] + " = " + b + "\r\n ";                     b = 0;                 }                 if (char_name.Length < char_fullname.Length)                 {                     for (int i = 0; i < char_name.Length; i++)                     {                         int a = char_name[i] + char_fullname[i];                         textBox5.Text += char_name[i] + " + " + char_fullname[i] + " = " + (char)a + "\r\n ";                         textBox4.Text += char_name[i] + " + " + char_fullname[i] + " = " + a + "\r\n ";                         a = 0;                     }                     for (int i = char_name.Length; i < char_fullname.Length; i++)                     {                         textBox3.Text += char_fullname[i];                     }                     textBox3.Text += "\r\n";                 }                 else                 {                     for (int i = 0; i < char_fullname.Length; i++)                     {                         int a = char_name[i] + char_fullname[i];                         textBox5.Text += char_name[i] + " + " + char_fullname[i] + " = " + (char)a + "\r\n ";                         textBox4.Text += char_name[i] + " + " + char_fullname[i] + " = " + a + "\r\n ";                         a = 0;                     }                     for (int i = char_fullname.Length; i < char_name.Length; i++)                     {                         textBox3.Text += char_name[i];                     }                     textBox3.Text += "\r\n";                 }             }         }          private void Form1_Load(object sender, EventArgs e)         {          }     } }Тесты:   Рисунок 7 – Тест 1  Рисунок 8 – Тест 2  Рисунок 9 – Тест 3 Ход работы задания 2: 1) Считывем число, используя деление на 10 с остатком считаем произведение цифр. С помощью метода Contains(), выясняем есть ли нужная цифра в числе. 2) Считываем А. В цикле проверяем все трехзначные числа на то, что при увеличении на число оно делится на другое без остатка. Листинг кода: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  namespace WinFormsApp1 {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();         }          private void button1_Click(object sender, EventArgs e)         {             string nat = textBox1.Text;             string a = textBox2.Text;             textBox3.Text = "";             //textBox4.Text = "";             bool proverka = true;             if (nat == null || nat == "") { proverka = false; }             for (int i = 0; i < nat.Length; i++)             {                 if ((nat[i] ^ '0') > 9) { proverka = false; }             }             if((a == null) || (a == "") || (a.Length > 1)) { proverka = false; }             if (a.Length == 1 && ( a[0] ^ '0' )> 9 ) { proverka = false; }             if (proverka == false)             {                 textBox3.Text += "ERROR" + "\r\n";             }             else             {                 int nat_1 = Convert.ToInt32(nat);                 int mult = 1;                 while (nat_1 != 0)                 {                     mult *= nat_1 % 10;                     nat_1 /= 10;                 }                 textBox3.Text += "Произведенице цифр = " + mult.ToString() + "\r\n";                   bool flag = nat.Contains(a);                 if (flag == true)                 {                     textBox3.Text += "В числе " + nat + " ЕСТЬ цифра " + a + "\r\n";                 }                 if (flag != true)                 {                     textBox3.Text += "В числе " + nat + " НЕТ цифры " + a + "\r\n";                 }             }         }          private void label1_Click(object sender, EventArgs e)         {          }          private void label2_Click(object sender, EventArgs e)         {          }          private void textBox3_TextChanged(object sender, EventArgs e)         {          }          private void textBox2_TextChanged(object sender, EventArgs e)         {          }          private void button2_Click(object sender, EventArgs e)         {             textBox4.Text = "";             textBox4.Text += "При увеличении на 1 делятся на 2: ";             for (int i = 100; i <= 999; i++)             {                 if ((i + 1) % 2 == 0)                 {                     textBox4.Text += i + " ";                 }             }             textBox4.Text += "\r\n \r\n \r\nПри увеличении на 2 делятся на 3: ";             for (int i = 100; i <= 999; i++)             {                 if ((i + 2) % 3 == 0)                 {                     textBox4.Text += i + " ";                 }             }             textBox4.Text += "\r\n \r\n \r\nПри увеличении на 3 делятся на 4: ";             for (int i = 100; i <= 999; i++)             {                 if ((i + 3) % 4 == 0)                 {                     textBox4.Text += i + " ";                 }             }             textBox4.Text += "\r\n \r\n \r\nПри увеличении на 4 делятся на 5: ";             for (int i = 100; i <= 999; i++)             {                 if ((i + 4) % 5 == 0)                 {                     textBox4.Text += i + " ";                 }             }         }          private void textBox4_TextChanged(object sender, EventArgs e)         {          }          private void Form1_Load(object sender, EventArgs e)         {          }     } } Тесты:  Рисунок 10 – Тест 1  Рисунок 11 – Тест 2  Рисунок 12 – Тест 3   Рисунок 13 – Тест 4 Вывод: Получены навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019. Созданы программы с использованием Windows Forms на языке С#. 