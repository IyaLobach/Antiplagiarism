Цель работы: Получить навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019. Создать программу с использованием Windows Forms на языках С#, С++, C. Часть 1. (выполняется на языке C.C++)  Задание к лабораторной работе: 1) реализовать алгоритм преобразования информации с использованием логических выражений в соответствии с вариантом задания из ЛАБОРАТОРНОГО ПРАКТИКУМА «Программирование задач по обеспечению информационной безопасности» (варианты, помеченные знаком «*», имеют повышенную сложность); 2) выполнить проверку на допустимость значений используемых переменных;  3) при описании переменных применить регистровый класс памяти.  Вариант: №1.  Задание: Реализовать механизм шифрования и расшифрования символьной информации с применением операции инверсии ~. Ход работы: Считываем строку с клавиатуры, если строка не пустая, то посимвольно передаем последовательность в функцию шифрования, иначе – выводим ошибку “Error”. В итоге на экране появится зашифрованная/расшифрованная последовательность. Листинг кода: #include <iostream> #include <string> using namespace std;  //шифрование/расшифрование char f_cipher_decipher(register char a)  {     return ~a; }  int main() {     cout << "Type sequence:";     register string text; flag:      getline(cin,text);     if ((text.length() == 0)) //проверка на ввод пустой строки     {         cout << "Error...\n";         goto flag;     }      cout << "Encrypted sequence: ";     //вывод зашифрованной последовательности     for (register int i = 0; i < text.length(); i++)      {         text[i] = f_cipher_decipher(text[i]);         cout << text[i];     }      cout << endl;     cout << "Decrypted sequence: ";     //вывод расшифрованной последовательности     for (register int i = 0; i < text.length(); i++)      {         text[i] = f_cipher_decipher(text[i]);         cout << text[i];     }  } Тесты:  Рисунок 1 – Тест 1  Рисунок 2 – Тест 2  Рисунок 3 – Тест 3 Часть 2. (выполняется на языке C#) Задание:  1) Создать консольный и Windows Forms проекты. выполняющие, поразрядное сложение двух строк (вашей фамилии и имени) с выводом промежуточных результатов. 2) Создать программу, выполняющую персональное задание в соответствии с вариантом. 1) Дано натуральное число: • Найти сумму цифр этого числа; • Определить, верно ли, что число начинается и заканчивается одной и той же цифрой. 2) Найти все трехзначные числа, такие, сумма цифр которых равна А, а само число делится на В (А и В вводятся с клавиатуры). Вариант 1. Ход работы задания 1: считываем имя и фамилию, заполняем два массива типа char и в цикле складываем их посимвольно, выводим промежуточные результаты “Result: ”. Если одно из полей пустое, выводим ошибку. Листинг кода консольного проекта: using System;  namespace ConsoleApp1 {     class Program     {         static void Main(string[] args)         {             Console.WriteLine( "Enter your name: ");             string name = Console.ReadLine();             Console.WriteLine("Enter your surname: ");             string fullName = Console.ReadLine();              //преобразуем строку в чаровый массив             char[] charName = name.ToCharArray();             char[] charFullName = fullName.ToCharArray();                        int[] unicodeName = new int[name.Length];             int[] unicodeFullname = new int[fullName.Length];              //проверяем, что строка не пустая             if (fullName.Length == 0 || name.Length == 0)             {                 Console.WriteLine("Error");             }             else             {                 //посимвольно складываем имя и фамилию и выводим результат                 //заполняем Unicode массивы имени и фамилии     //выводим результат                 if (fullName.Length >= name.Length)                 {                     int[] text = new int[fullName.Length];                     for (int i = 0; i < name.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         unicodeName[i] = (int)charName[i];                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = n;                     }                      for (int i = name.Length; i < fullName.Length; i++)                     {                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = charFullName[i];                     }                      Console.WriteLine("Unicode Surname: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((int)unicodeFullname[i] + " ");                     }                      Console.WriteLine("\nUnicode name: ");                     for (int i = 0; i < name.Length; i++)                     {                         Console.Write((int)unicodeName[i] + " ");                     }                      Console.WriteLine(" \nResult: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((char)text[i]);                     }                 }                 else                 {                     char[] text = new char[name.Length];                     for (int i = 0; i < fullName.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         unicodeName[i] = (int)charName[i];                         unicodeFullname[i] = (int)charFullName[i];                         text[i] = (char)n;                     }                      for (int i = fullName.Length; i < name.Length; i++)                     {                         unicodeName[i] = (int)charName[i];                         text[i] = charName[i];                     }                      Console.WriteLine("Unicode Surname: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((int)unicodeFullname[i] + " ");                     }                      Console.WriteLine("\nUnicode name: ");                     for (int i = 0; i < name.Length; i++)                     {                         Console.Write((int)unicodeName[i] + " ");                     }                      Console.WriteLine(" \nResult: ");                     for (int i = 0; i < fullName.Length; i++)                     {                         Console.Write((char)text[i]);                     }                 }             }         }     } }  Тесты:  Рисунок 4 – Тест 1  Рисунок 5 – Тест 2  Рисунок 6 – Тест 3  Листинг кода Windows Forms проекта: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  namespace WF_lab1 {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();         }            private void button1_Click(object sender, EventArgs e)         {             string name = textBox1.Text;             string fullName = textBox2.Text;              textBox3.Text = "";             textBox4.Text = "";             textBox5.Text = "";              //преобразуем строку в чаровый массив             char[] charName = name.ToCharArray();             char[] charFullName = fullName.ToCharArray();             //проверяем, что строка не пустая             if (fullName.Length == 0 || name.Length == 0)             {                 textBox3.Text = "Error, all field must be filled in";             }             else             {                 //посимвольно складываем имя и фамилию и выводим                 //выводим Unicode имени и фамилии                 if (fullName.Length >= name.Length)                 {                     textBox3.Text = "";                     textBox4.Text = "";                     textBox5.Text = "";                                          for (int i = 0; i < name.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         textBox4.Text += (int)charName[i] + " ";                         textBox5.Text += (int)charFullName[i] + " ";                         textBox3.Text += charName[i] + " + " + charFullName[i] + " = " + (char)n + " \r\n";                     }                      for (int i = name.Length; i < fullName.Length; i++)                     {                         textBox5.Text += (int)charFullName[i] + " ";                         textBox3.Text += "_ + " + charFullName[i] + " = " + charFullName[i] + " \r\n";                     }                 }                 else                 {                     for (int i = 0; i < fullName.Length; i++)                     {                         int n = charName[i] + charFullName[i];                         textBox4.Text += (int)charName[i] + " ";                         textBox5.Text += (int)charFullName[i] + " ";                         textBox3.Text += charName[i] + " + " + charFullName[i] + " = " + (char)n + " \r\n";                     }                      for (int i = fullName.Length; i < name.Length; i++)                     {                         textBox4.Text += (int)charName[i] + " ";                         textBox3.Text += charName[i] + " + _ = " + charName[i] + " \r\n";                     }                 }             }         }              } }  Тесты:   Рисунок 7 – Тест 1  Рисунок 8 – Тест 2  Рисунок 9 – Тест 3 Ход работы задания 2: 1) Считывем число, используя деление на 10 с остатком считаем сумму цифр. Запоминаем первую и последнюю цифры и сравнием их, если они равны выводим соответствующий результат. 2) Считываем А и В. В цикле проверяем все трехзначные числа на то, что их сумма цифр равна А и остаток от деления на В равен 0, выводим на экран. Листинг кода: using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  namespace WF_1_1_1 {     public partial class Form1 : Form     {         public Form1()         {             InitializeComponent();         }          private void button1_Click(object sender, EventArgs e)         {             textBox4.Text = "";             //проверка на ввод пустой строки             string num = textBox1.Text;             if (textBox1.Text == "")             {                 textBox4.Text = "Error, fill in the field";              }             else             {                 int number = Convert.ToInt32(textBox1.Text);                 int sum = 0;                 int lastDigit = number % 10;                 int firstDigit = 0;                  while (number > 0)                 {                     sum += number % 10; //cчитается сумма цифр                     if ((number / 10) == 0) //проверка на старший разряд (первую цифру)                     {                         firstDigit = number;                     }                     number /= 10;                 }                  textBox4.Text += "Сумма цифр в числе: ";                 textBox4.Text += sum;                  if (firstDigit == lastDigit) //равенство первой и последней цифры                 {                     textBox4.Text += "\r\n Первая и последняя цифры совпадают";                 }                 else                 {                     textBox4.Text += "\r\n Первая и последняя цифры не совпадают";                 }             }         }          private void button2_Click(object sender, EventArgs e)         {                                    string text1 = textBox2.Text;             string text2= textBox3.Text;              //проверка на ввод пустой строки             if (textBox2.Text == "" || textBox3.Text == "")             {                 textBox4.Text = "Error, fill in the fields";             }             else             {                 int a = Convert.ToInt32(textBox2.Text);                 int b = Convert.ToInt32(textBox3.Text);                 textBox4.Text += "\r\n Числа, которые делятся на " + b + " и сумма цифр равна " + a + "\r\n";                 for (int i = 100; i < 1000; i++)                 {                     int j = i / 100;        //старший разряд                     int g = i / 10 % 10;    //средний разряд                     int m = i % 10;         //младший разряд                      if ((j + g + m == a) && (i % b == 0))                     {                         textBox4.Text += "\t" + i;                     }                 }             }         }     } }  Тесты:  Рисунок 10 – Тест 1  Рисунок 11 – Тест 2  Рисунок 12 – Тест 3 