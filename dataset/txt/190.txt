Министерство науки и высшего образования РФ Санкт-Петербургский государственный университет аэрокосмического приборостроения   Факультет № ____1_____  Кафедра N __14____  ЗАДАНИЕ по курсовому проектированию по дисциплине «Сети ЭВМ и телекоммуникации» на тему:  «Проектирование сетевого контроллера кольцевой ЛВС»__________ ___________________________________________________________________________ Выдано студенту Герасимец А. В. группа № 1842 __8___февраля__2022 г.    Срок исполнения _20 апреля  2022 г.  1. ТЕХНИЧЕСКИЕ УСЛОВИЯ Вариант 5.  1. Поток симметричен. 2. Тактовая частота сдвига Fт = 2 МГц. 3. Разрядность буфер-ного регистра последовательного интерфейса ω = 8. 4. Расстояния между станциями одинаковы. 5. Направление передачи – в сторону увеличения номеров. 6. Количество станций N = 90. 7. Интенсивность входного потока  λt = 15 1/с. 8. Длина кадра b = 900 бит.  9. Приоритет кольца. 10. Длина сети L = 2 км. 11. Метод – Odd/Even. 12. Алго-ритм  децентрализованного (транзитного) мониторного узла (Монитор Дц). 13. Опре-деление вероятности прохождения кадра от станции №80 до станции №50. 14. Опре-деление задержки между станциями №60 и №50.    2. СОДЕРЖАНИЕ ПРОЕКТА    Принципы работы ЛВС с детерминированным доступом;      краткое обоснование модели кольца со вставными регистрами;      определение функциональных зависимостей основных характеристик проектируе-мой ЛВС: вероятность Q(i,k), средняя величина задержки передачи кадра Tf(i,j;    описание используемого формата кадра и метода контроля ошибок;   разработка структуры сетевого контроллера и описание графа его состояний;   разработка протокола передачи кадра подуровня MAC и описание заданного алго-ритма работы узла сети;     программная модель заданного метода контроля ошибок для сетевого контроллера;  анализ результатов.             3. ОФОРМЛЕНИЕ ПРОЕКТА 1. Пояснительная записка с рисунками и расчетными таблицами 2. Чертежи  - блок-схемы ЛВС для заданных вариантов расчетов параметров;    - структурная схема сетевого микроконтроллера;     - граф-схема состояний сетевого микроконтроллера;      - граф-схема алгоритма процедуры передачи кадра в сети;     3. Приложение  - листинг программы моделирования, скриншоты результатов моделирования.   4. УКАЗАНИЯ Пояснительная записка должна быть выполнена на листах формата 210х297 чернилами или напечатана на принтере; используемые расчетные формулы приводить в буквенном обо-значении с кратким объяснением, а затем с числовыми значениями.  Выполненные проекты не возвращаются.  ЛИТЕРАТУРА 1. С.В. Горбачев, Ю.Д . Крылов. ПРОЕКТИРОВАНИЕ УПРАВЛЯЮЩИХ ЛОКАЛЬНЫХ СЕТЕЙ НА ОСНОВЕ МИКРОКОНТРОЛЛЕРОВ / Метод. указания для самостоятельной работы по курсовому проектированию. ГУАП, 2022, в эл. виде. 2. Компьютерные сети. Принципы, технологии, протоколы. Учебник / В.Г. Олифер, Н.А. Олифер. – СПб: Издательство «Питер», 2016. – 672 с. 3. Ю. Блэк. Сети ЭВМ: протоколы, стандарты, интерфейсы. - М.: Мир, 1990. 4. В.К. Щербо и др. Справочник. Стандарты по локальным вычислительным сетям. - М.: Радио и связь, 1990. 5. Д. Дэвис, Д. Барбер, У. Прайс, С. Соломонидес. Вычислительные сети и сетевые прото-колы. - М.:  Мир, 1982.     Руководитель проекта     ________           /С.В. Горбачев/ (подпись) Задание принял к исполнению ______________________    /А.В. Герасимец/ (подпись)   СодержаниеОбоснованиесоответствиямоделикольцасовставнымирегистрамипринципам работы ЛВС с детерминированным доступом5Методы доступа в ЛВС5Детерминированные методы доступа5КольцевыеЛВСсовставнымирегистрами.Структуракольцевогоадаптера.7Модель кольца с буферами транзита9Определениефункциональныхзависимостейосновныххарактеристикпроектируемой ЛВС16Теоретическая часть17Расчеты по заданным формулам20Описание используемого формата кадра и метода контроля ошибок24Описание используемого формата кадра24Описание метода контроля ошибок25Описание структуры сетевого контроллера и графа его состояний26Описание структуры сетевого контроллера26Граф-схема состояний сетевого контроллера29РазработкапротоколаподуровняMACиописаниеалгоритмареализациипроцедурыпередачикадравзависимостиотзаданногометода контроля32Граф-схема алгоритма процедуры передачи кадра в сети34Результаты моделирования35Анализ результатов39Приложение40main.cpp40station.hpp40frame.hpp4841.Обоснование соответствия модели кольца со вставнымирегистрами принципам работы ЛВС с детерминированнымдоступом1.1.Методы доступа в ЛВСВЛВСможновыделитьдвеосновныегруппывариантовдоступакмоноканалу:случайныеидетерминированныеметоды.ВЛВСсшиннойтопологиейширокоиспользуетсяслучайныйдоступ,авкольцевыхтопологиях – детерминированный.1.2.Детерминированные методы доступаПриметодахдетерминированногодоступавсекомпьютерычерезсвоикольцевыеадаптеры(станции)осуществляютсогласованноевзаимодействиесмоноканаломввидекольца.Детерминированныйдоступоснованнапоочередномпредоставленииабонентскимсистемамразрешениянапередачукадра.Различаюттриподходакреализацииметодовдетерминированногодоступа к моноканалу:1.пропорциональный доступ;2.приоритетного доступа;3.локально – приоритетный доступ.Пропорциональныйдоступисключаетвозможностьконфликтаисточниковзасчетзаданияочередностидоступаабонентовкканалу.Продвижениеочередностипроизводитсялибосинхросигналами,либопризнаками (маркерами) разрешения доступа.Приодномизспособовприоритетногодоступаисточникисначалапередаютвканалуправляющуюинформацию,задающуюихприоритеты.Источникииспользуютпроцедурудецентрализованногокодовогоуправления5длявыявленияисточникаснаибольшимприоритетом,которыйпередаетданныеужеприотсутствииконфликта.Болееизвестнымиширокоиспользуемымспособомприоритетногодоступаявляетсямаркерныйдоступсприоритетами,реализованныйфирмойIBMвЛВСTokenRingизатемпризнанный стандартом IEEE 802.5.СетиTokenRingиспользуютсистемуприоритетов,котораяпозволяетнекоторымабонентамсвысокимприоритетом,болеечастопользоватьсясобойсетью.ВTokenRingмаркер,представляющийсобойкороткийслужебныйкадр,содержитдваполя,которыеуправляютприоритетом:полеприоритетовиполерезервирования.Толькоабоненты,приоритеткоторыхравениливышеприоритета,содержащегосявмаркере,могутзавладетьим.Послетого,какмаркерзахвачениизменен(врезультатечегоонпревратилсявинформационныйкадр),толькостанции,приоритеткоторыхравениливышеприоритетапередающейстанции,могутзарезервироватьмаркердляследующегоциклапередачи.Привосстановлениимаркеравнеговключаетсяболеевысокийприоритетданнойрезервирующейстанции.Станции,которыеповышаютуровеньприоритетамаркера,должнывосстановитьпредыдущийуровень приоритета после завершения передачи своего кадра.Прилокально–приоритетномдоступелюбойисточниксравниваетприоритетсвоегокадрасприоритетомкадра,передающегосяпоканалувместеегоподключения.Дальшепоканалуисточникпередаеткадрсболеевысокимприоритетом,адругойоставляетусебядляпоследующейпередачи.Приотсутствиипередачивканалеисточникпередаетсвойкадрнезависимоотегоприоритета.Обычнореализуютсякрайниевозможностиподхода:любойкадристочникаимеетлибоболеевысокий,либоболеенизкийприоритет, чем любой кадр в кольце.Основные способы локально–приоритетного доступа:6●сегментированное кольцо,●кольцо типа Cambridge Ring (CR),●с переменной задержкой,●кольцо со вставкой регистров.Сегментированныекольцаикольцаспеременнойзадержкоймогутиметь одну или более кольцевых магистралей.Приреализацииметодовлокально-приоритетногодоступакольцевойадаптеркаждогоисточникадолженпрослушиватьмоноканалвместеегоподключенияиприотсутствиивнемпередачиданныхможетначатьпередачусвоегокадра.Крометого,источникможетзаменятьприходящийпокольцукадрнасвойкадр,еслиегоприоритетвыше(вкольцахспеременнойзадержкойивставкойрегистров).Вкратныхсегментированныхкольцахприемник имеет возможность адресованные ему кадры изымать из кольца.1.3.КольцевыеЛВСсовставнымирегистрами.Структуракольцевого адаптера.Вкольцахсовставнымирегистрамиконфликтымеждукадрами,находящимисяустанцийиготовымикпередаче,икадрами,идущимипокольцу,динамическиразрешаютсяпутемвключенияпоследовательныхсдвиговыхрегистроввкольцо.Всерегистрывключенывнутрьадаптеровкольца.Вставныерегистрывыполняютфункциюбуферовкадров.Нарис.1показанаструктуракольцевогоадаптера,вкоторомкромебуферовпередачииприема кадров, включен вставной буфер транзита.7Рисунок 1 - Кольцевой адаптер со вставным буфером транзитаЛВСсовставнымирегистрами–кольцеваясеть,обеспечивающаяоднонаправленнуюпередачуданныхмеждустанциямипооднойфизическойсредесвозвратомданныхкпередающейстанции.Вкольцеможетприменятьсяпроцедурапередачикадрасвозвратомданныхкпередающейстанции.Этапроцедурасоответствуетпростомукольцу.Есликадрснимаетсяскольцаполучателем,тотакаяпроцедурабудетсоответствоватькратному кольцу.Кадрданных,подготовленныйстанциейдлявыдачивсеть,временнобуферизируетсявбуферепередачкольцевогоадаптера.Порядокиначаловыдачикадраизадаптеразависитотпринятогоспособафункционированиясети,тоестьотустановленнойсистемыприоритетовприпередачеданных.Всоответствиислокально-приоритетнымметодомдоступаразличаютприоритеткольцаиприоритетстанции.Вовремяпередачистанциейсвоихсобственныхкадровданныхвкольцоостальныекадры,приходящиеотдругихстанций,нонепредназначенныедляданнойстанции,запоминаютсявбуферетранзитаеекольцевогоадаптера.Еслижестанциянепередаетсвоисобственныекадры,тодалеепокольцупередаетсясодержимоевставногобуфера транзита кольцевого адаптера.8Порядокприемакадраполучателемреализуетсявблокевходногоинтерфейсавзависимостиотпроцедурыпередачикадров,соответствующейпростомуиликратномукольцу.Процедурапередачикадровдляпростогоиликратногокольцавыбираетсявзависимостиотзаданногоприоритетакольцаилистанции.Приболеевысокомприоритетекольцаприменяетсяпроцедурапростогокольца.Приболеевысокомприоритетестанцииприменяетсяпроцедура кратного кольца.1.4.Модель кольца с буферами транзитаМоделькольцасбуферамитранзитаприналичиитрехстанцийизображенанарис.2.Дляописанияфункционированиясистемыположим,чтокадр,сформированныйстанцией1ипредназначенныйдлястанции3,проходит через эту модель.Послегенерациикадрпомещаетсявбуферпередачистанции1,гдеожидаетсвоейочерединапередачу.Кадры,идущиепокольцу,запоминаютсявбуферетранзитаивставляютсяврасписаниевсоответствииспринятойдисциплинойобслуживания:сучетомчейприоритетвыше–приоритеткольцаилистанции.Началопередачикадраозначает,чтоначалосьобслуживаниеикадрпоступаетвблокзадержкистанции2.Этоявляетсяважнейшим свойством данной модели.9Рисунок 2 - Модель кольца с буферами транзита для трех станцийБлокизадержкиτ1,τ2иτ3учитываютзадержкупередачи,необходимуюдлядешифрацииадреса,ивремяраспространениясигналапосоответствующей дуге кольца.Вблокезадержкистанции2кадрсчитаетсязадержаннымнапостоянноевремяτ2,азатемонпомещаетсявбуфертранзитастанции2.10Считается,чтопакетпоступаетвблокзадержкистанции3,когдаонпередается по дуге 2-3.Проследовавпостояннуюзадержкуτ3,кадрпоступаеткстанции3,т.е.в буфер приема, не обозначенный на рис. 2. При этом кадр покидает модель.Анализпредставленноймоделиможетбытьупрощен,еслипринятьдопущение,чтоемкостьбуфераприемадостаточновысока,чтобыневлиятьна передачу в кольце потока кадров.Интереспредставляетоценказадержкипередачикадрамеждудвумястанциями,котораяпредставляетсобойвременнойинтервалотмоментагенерациикадранастанцииiдоегополучениянастанцииjиобозначаетсякак.𝑇𝑓(𝑖,𝑗)При анализе будут использоваться следующие допущения.1.Входныепотокикадровотвсехстанцийявляютсяпуассоновскимисинтенсивностями,гдеS–номерочереднойλ𝑡(1), … , λ𝑡(𝑆), … , λ𝑡𝑠(𝑁)станции, N –общее число станций.2.Времяпередачикадравкольцоможетбытьраспределенопопроизвольномузакону,араспределениедлинкадров,сформированныхразличными станциями, идентичны.3.Отношениямеждуисточникамииполучателямикадровопределяютсяпроизвольнозадаваемойматрицейвыборамаршрута,где|𝑃(𝑖, 𝑗)|–вероятностьтого,чтокадр,сформированныйнастанцииi,𝑃(𝑖, 𝑗)адресован станции j.4.Задержкакольцевогоадаптераiпостоянна.Дляпростотыввеличинуτ𝑖такжевключаетсязадержкараспространениясигналов,τ𝑖передаваемых между адаптерами (i-1) и i.11Анализпредставленноймоделиоснованнадекомпозицииполноймоделикольцавболеепростуюподмодель.Затемпроизводитсяанализподмоделиивычисляютсязначениязадержекполноймоделинаоснованиирезультатов, полученных для подмоделей.Простейшийвариантдекомпозицииполноймодели–эторассмотрениеподмодели,содержащейтолькооднудугукольца,буферпередачибуфертранзита и блок задержки.Анализподмоделиупрощаетсяприиспользованиивытекающихизсделанных ранее следующих предположений:●входной поток буфера транзита является пуассоновским;●времяпоступлениякадраивремяобработки,т.е.времяегопередачи, взаимно независимы.Действительноевремязадержкикадраданныхопределяетсясуммойтрехслагаемых:временизадержкивочередивбуферепередачи,временипередачи, времени суммарных задержек в кольцевых адаптерах кольца.Необходимо отметить два обстоятельства:●очередь имеется только в станции-источнике;●подмодельимеетненулевуюзадержкувкаждомадаптерекольца,следовательно,суммавсехзадержеквочередизависитотсреднегочислакольцевыхадаптеров,черезкоторыедолженпройти кадр.Кромепредположений,введенныхранее,дополнительновводятсяследующие:●моментпоступлениякадранаблокзадержкистанцийидентиченначалу его передачи по дуге;(𝑖−1)−𝑖●время распространения по различным дугам одинаково.12Этодостигаетсявключениемвподмодельстанцииiследующихкомпонентов:очередейнастанцииi,дуги,очередейнастанции𝑖−(𝑖+1), дуги. Подмодель станции i показанана рис. 3(𝑖−1)(𝑖−1)−𝑖Рисунок 3 - Подмодель станций с очередямиПодмодельстанцииiиспользуетсятолькодляопределениявеличинзадержекочередейвбуферепередачиивбуферетранзита,ноне𝑊𝑡(𝑖)𝑊𝑟(𝑖)дляопределениязадержекочередейнастанции.Цельювключения(𝑖−1)очередейстанцииидугивподмодельстанцииiявляется(𝑖−1)(𝑖−1)− 𝑖точноеописаниедействительногопроцессапоступлениякадровнастанциюiи его взаимозависимости с процессом передачи кадров по дуге.𝑖 − (𝑖+1)13Интерфейсподмоделистанцииiкобщеймоделикольцадаетсяопределениемвходногопотокакбуферутранзитастанции.(𝑖−1)Предполагается, что этот поток пуассоновский.Длятогочтобыопределитьзадержкивподмоделистанцииi,можноиспользоватьупрощеннуюинтерпретациюэтойподмодели(нарис.3этосделано с помощью пунктирных рамок). Это упрощение делается в три этапа:●безпотериобщностиможносчитать,чтозадержкаравнанулю,τ𝑖поскольку задержка приводит просто к временному сдвигу;●всекадры,поступающиенастанциюi,рассматриваютсякактранзитные кадры;●входнойпроцесспоступлениякадровквходному(фиктивному)буферустанцииiнеподчиняетсядействиюобычныхправилприоритета,применяемыхкбуферупередачиибуферутранзитастанцию (i-1)Следовательно,можносоединитьобабуферанастанции(i-1)водинбуфериорганизоватьоднуочередь.Вупрощенномвариантеподмоделинарис.3онаобозначенакакα-очередь.Объединенныйвходнойпотоккадроввочередибудетпуассоновскимсинтенсивностью.Вседругиеλ𝑟(𝑖)компонентыподмоделистанцииiявляютсянеизменнымивупрощеннойподмоделистанцииi(рис.3).Приэтомдугикольцаявляютсяобслуживающими приборами:●обслуживающий прибор A описывает действия дуги;(𝑖−1)−𝑖●обслуживающий прибор B – дуги.𝑖−(𝑖+1)Вупрощенномвариантебуферпередачистанцииiноситназвание«t-очередь», буфер транзита – «r-очередь».Основные свойства упрощенной подмодели станции i следующие:14●кадры,полученныедляприемавr-очередь,начинаютобслуживаться прибором A;●времяобслуживаниякадроввобслуживающихприборахAиBидентично.Входнойпоток,поступающийвr-очередьнарис.3,являетсясоставным,таккакегослагаемыепоступаютотбуферапередачиибуфератранзита станции (i-1). Суммарная интенсивность этого потока.λ𝑟(𝑖)Необходимоотметить,чтоналичиеприбораAобслуживаниявподмоделинеоказываетвлияниянапроцессобслуживаниявприбореB.Такимобразом,обслуживающийприборBбудетвестисебятакже,какеслибыкадрыкольцавместотого,чтобыпоступатьвα-очередь,направляютсявпрямо к r-очереди, как это показано в «эквивалентной модели» на рис. 4.Рисунок 4 - Эквивалентная модель станцииВупрощенномвариантеподмоделинарис.3обслуживаниекадравприбореAначинаетсялибонамногораньше,чемобслуживаниевприбореB(приналичиикадроввочередиr),либоточновтотжесамыймоментвремени(еслинеткадроввочередиr).Следовательно,еслидопускается,чтомоделинарис.3и4управляютсяидентичнымивходнымипотоками,15обслуживающийприборB(рис.3)всегдабудетобрабатыватьтежесамыекадрыизr-илиt-очередей,какиобслуживающийприборBнарис.4,еслирассматриваетсяначалоновогообслуживания,т.е.еслинетостаточныхкадров в r-очереди.Дисциплинаобслуживаниякадроввкаждойочереди–FIFO(«первыйпришел–первыйобслужен»).ПоэтомупроцессыобработкивобслуживающемприбореBвподмоделях(рис.3и4)идентичны.Такимобразом,задержкаотмоментапоступлениякадравα-очередь(рис.3)до𝑑𝑟(𝑖)того,какегообслуживаниеначнетсявобслуживающемприбореB,равназадержкевобъединеннойr-очереди(рис.4).Отсюдавытекает,чтоэквивалентнаямодельстанцииi–этосистемамассовогообслуживанияклассаM|G|1(пуассоновскийвходнойпоток,произвольноевремяобслуживания,одинобслуживающийприбор),свойствакоторойхорошоизвестны.2.Определение функциональных зависимостей основныххарактеристик проектируемой ЛВСИсходные данные:1. Поток симметричен.2. Тактовая частота сдвига Fт = 2 МГц.3.Разрядностьбуферногорегистрапоследовательногоинтерфейсаω=8.4. Расстояния между станциями одинаковы.5. Направление передачи – в сторону увеличения номеров.6. Количество станций N = 90.167. Интенсивность входного потока.λ𝑡 = 15 1/с8. Длина кадра b = 900 бит.9. Приоритет кольца.10. Длина сети L = 2 км.11. Метод – Odd/Even.12.Алгоритмдецентрализованного(транзитного)мониторногоузла(Монитор Дц).13.Определениевероятностипрохождениякадраотстанции№80достанции №50.14. Определение задержки между станциями №60 и №50.2.1.Теоретическая частьДлядисциплиныобслуживаниясотносительнымиприоритетамивслучаеприоритетакольца(r)ожиданиеобслуживаниявr-очередибудетравно𝑑𝑟(𝑟)(𝑖)=[ρ𝑡(𝑖)+ρ𝑟(𝑖)]×𝐸[𝑇𝑝2]2*[1−ρ𝑟(𝑖)]×𝐸[𝑇𝑝],где,ρ𝑡(𝑖)=λ𝑡(𝑖)*𝐸[𝑇𝑝].ρ𝑟(𝑖)=λ𝑟(𝑖)*𝐸[𝑇𝑝]Здесь,–загрузкиобслуживающегоприбора,создаваемыеt-иρ𝑡(𝑖)ρ𝑟(𝑖)r-очередямисоответственно;–времяобслуживания(передачи)кадра𝑇𝑝данных.Среднее время передачи в кольцо пакета данных определяется как:17,гдеb–длинакадра[бит],fd–скоростьпередачикадра𝐸[𝑇𝑝]=𝑏𝑓𝑑[бит/с].Ожидание начало обслуживания в t-очереди будет следующим:𝑊𝑡(𝑟)(𝑖)=[ρ𝑟(𝑖)+ρ𝑡(𝑖)]*𝐸[𝑇𝑝2]2*[1−ρ𝑟(𝑖)−ρ𝑡(𝑖)]*[1−ρ𝑟(𝑖)]÷𝐸[𝑇𝑝].Средняявеличиназадержеквα-очередидаетсяследующимвыражением:.𝑊α(𝑖)=ρ𝑟(𝑖)×𝐸[𝑇𝑝2]2*[1−ρ𝑟(𝑖)]×𝐸[𝑇𝑝]Следовательно,ожиданиеобслуживания(передачакадра)дляr-очередибудет таким:.𝑊𝑟(𝑟)(𝑖)=𝑑𝑟(𝑟)(𝑖)−𝑊α(𝑖)=ρ𝑡(𝑖)×𝐸[𝑇𝑝2]2*[1−ρ𝑟(𝑖)]×𝐸[𝑇𝑝]Дляопределенияинтенсивностипотокакадровукаждойстанцииλ𝑟(𝑖)вкольце,содержащемвсегоNстанций,необходимоопределитьвероятностьтого,чтокадр,сформированныйнастанцииi,проходиттранзитом𝑄(𝑖,𝑘)через станцию k, при этом𝑄(𝑖,𝑘)=𝑗∈𝐼(𝑖,𝑘)∑𝑃(𝑖,𝑗)для всех j, которые определены на множестве. Здесь𝐼(𝑖,𝑘)гдеM-множествоцелыхчисел,множествоцелыхчисел1≤𝑀≤𝑁𝑋−илимножество целых чисел.𝑖<𝑥≤𝑘𝑋−𝑘<𝑥≤𝑖18Интенсивностьпоступлениякадроввбуфертранзитаможетбытьопределена по формуле.λ𝑟(𝑘)=𝑖=1𝑁∑λ𝑡(𝑖)*𝑄(𝑖,𝑘)Длясимметричногопотокавсистеме,содержащейNстанций,справедливо:𝑃(𝑖,𝑗)=1𝑁−1,𝑖≠𝑗;.𝑃(𝑖,𝑖)=0Вероятностьпередачикадраизстанцииiсамойсебесчитаемравнойнулю и в случае симметричного потока. Тогдаλ𝑡(𝑖) = λ𝑡 = 𝑐𝑜𝑛𝑠𝑡.λ𝑟(𝑘)=λ𝑡*𝑘=1𝑁∑𝑄(𝑖,𝑘)=λ𝑡*1𝑁−1*[𝑁*𝑁−𝑁2−(𝑁−1)]Средняя величина задержки передачи кадра, сформированного настанцииiипредназначенногодлястанцииj,определяетсяследующимвыражением:,𝑇𝑓(𝑖,𝑗)=𝑊𝑡(𝑖)+𝑛∈𝑀(𝑖,𝑗)∑(𝑊𝑟(𝑛)+τ𝑛)+τ𝑗+𝐸[𝑇𝑝]где–среднеевремяожиданиявt–очередиупередающейстанции,то𝑊𝑡(𝑖)естьвбуферепередачи;–суммарнаязадержкапередачикадраΣ(𝑊𝑟(𝑛)+τ𝑛)данныхвбуферахтранзитаиблокахзадержкитранзитныхстанций;–М(𝑖,𝑗)множествотранзитныхстанциймеждустанциямиiиj;–времязадержкиуτ𝑗приемной станции;– среднее время передачив кольцо кадра данных.𝐸[𝑇𝑝]19Здесьгде NS - множество станций в кольце,.𝑁𝑆={1, 2, …, 𝑁}Величинанаходится так:τ𝑛τ𝑛=τα+𝑡𝑛𝑥=ω𝐹𝑇+𝐿/𝑁𝑐гдеактивнаясоставляющаязадержки,–задержкапередачипоτα−𝑡𝑛𝑥каналу,ω–разрядностьбуферногорегистрапоследовательногоинтерфейса,FТ–тактоваячастотасдвига,L–длинасети,N–числостанцийЛВС,с=200000 км/с – скорость распространения сигнала по кабелю.2.2.Расчеты по заданным формуламДлясимметричногопотокавсистеме,содержащейстанций,𝑁=90получаем𝑃(𝑖,𝑗)=190−1=189𝑃(𝑖,𝑖)=020Тогда:Необходимоопределитьвероятностьтого,чтопакет,сформированныйна станции 80, проходит транзитом через станцию 50, т.е. Q (80, 50).НайдемвеличинуI(80,50)поформуле(2),гдеM={1,2,3,4,…90}иX = {51, 52, 53, 54, … 80}, так как,т.е.,, то𝑖≥𝑘80≥50𝐼(80,50)={𝑋|50<𝑥≤80}=|{51, 52, 53, 54, … 80}|=30(количество узлов между 50 и 80 узлами).Рисунок 5 - Схема кольцевой ЛВС для задачи нахождения Q(80,50)По формуле находим Q(80,50):𝑄(80,50)=𝑃(80,51)+𝑃(80,52) ... +𝑃(80,80), так как=189+189+...+0)=2989𝑃(80,80)=021В случае симметричного потока λt(i) = 15 1/с, тогда с учетом, имеем λr ,находящееся по формуле:𝑃(𝑖,𝑖)=0λ𝑟=15*190−1*[90*90−902−(90−1)]=6601𝑐По формуле определяем:τ𝑛τ𝑛=ω𝐹𝑇+𝐿/𝑁𝑐=82*106+2/902*105=4,11*10−6𝑐Поформулеопределяемсреднеевремяпередачивкольцопакетаданных:𝐸[𝑇𝑝]=9002*106=4,5*10−4𝑐Поформуламопределяемзагрузкиобслуживающегоприбора,создаваемые t- и r-очередями соответственно:ρ𝑡(𝑖)=λ𝑡(𝑖)*𝐸[𝑇𝑝]=15*4,5*10−4=0,00675ρ𝑟(𝑖)=λ𝑟(𝑖)*𝐸[𝑇𝑝]=660*4,5*10−4=0,297Множество М(60,50) определяется из формулы:,𝑀(60,50)=𝑁𝑆−{𝑋|(𝑗≤𝑥≤𝑖)}={1,2,...,49,61,62,...90}так как,𝑖≥𝑗,60≥50|𝑀|=7922Рисунок 6 - Схема кольцевой ЛВС для задачи нахождения𝑇𝑓(60,50)По формуле найдем ожидание начала обслуживания в t-очереди:𝑊𝑡(𝑟)(𝑖)=[0,297+0,00675]*(4,5*10−4)22*[1−0,297−0,00675]*[1−0,297]÷(4,5*10−4)=0,2758*10−10𝑐По формуле найдем ожидание начала обслуживания в r-очереди:𝑊𝑟(𝑟)(𝑖)=𝑑𝑟(𝑟)(𝑖)−𝑊α(𝑖)=0,00675*(4,5*10−4)22*[1−0,297]*(4,5*10−4)=2,162*10−6𝑐Поформулеопределяемсреднюювеличинузадержкипередачипакета,сформированного на станции 60 и предназначенного станции 50:𝑇𝑓(60,50)=0,2758*10−10+79*(2,162*10−6+4,11*10−6)++4,11*10−6+4,5*10−4=0,9496 мсек233.Описание используемого формата кадра и метода контроляошибок3.1.Описание используемого формата кадраТаблица 1 - Используемый формат кадра8бит7бит1бит7бит1бит1бит1бит7бит1бит7бит1бит…7 бит1битФНАПРАОРТКБОДПДРПД1Р…ПД108Р1.ФН-флагначаласоответствуетзначению“01111110”,указываетнато,что следующие за ним данные - являются данными адреса получателя2.P-битчетности.Рассчитываетсядлякаждогоинформационногополя.Станцияисточниквыполняетсложениепомодулю2(mod2)вкаждоминформационномполеизаноситвбитчетностилибо0,либо1.Послеполучениякадрарабочаястанциявыполняетсобственноевычислениепомодулю2,сравниваетполученныйбитчетностиспринятым.Еслибитчетностинесовпадает,тостанцияприемникформируеткадр-ответс ошибкой.3.АП-адресполучателяпринимаютзначенияот1до90(0000001до1011010) , так как количество станций N = 904.АО-адресотправителяпринимаютзначенияот1до90(0000001до1011010) , так как количество станций N = 905.ТК-типкадрапринимаетзначение0или1,где0-кадрданных,1-кадр ответа.6.БО-битошибкипринимаетзначение0или1,где0-нетошибок,1-естьошибка.Устанавливаетсяисточникомв«0».Можетбытьустановленв«1»получателем,либотранзитнымузлом.Получателем–вслучае,когдаприпроверкепакетазначениябитовчетностине24соответствуютпринятымзначениям.Транзитнымузлом–вслучае,когдавполе«адресполучателя»либовполе«адресисточника»находится значение, не соответствующее указанному диапазону7.ДПД-длинаполяданныхпринимаетзначениеот0до108(0000000до1101100)8.ПД - поле данных содержит данные, которые передает станция.3.2.Описание метода контроля ошибокКонтрольпопаритетупредставляетсобойнаиболеепростойметодконтроляданных.Втожевремяэтонаименеемощныйалгоритмконтроля,таккаксегопомощьюможнообнаружитьтолькоодиночныеошибкивпроверяемыхданных.Методзаключаетсявсуммированиипомодулю2всехбитконтролируемойинформации.Например,дляданных100101011результатомконтрольногосуммированиябудетзначение1.Результатсуммированиятакжепредставляетсобойодинбитданных,которыйпересылается вместе с контролируемой информацией.Приискаженииприпересылкелюбогоодногобитаисходныхданных(иликонтрольногоразряда)результатсуммированиябудетотличатьсяотпринятогоконтрольногоразряда,чтоговоритобошибке.Однакодвойнаяошибка,например110101010,будетневернопринятазакорректныеданные.Поэтомуконтрольпопаритетуприменяетсякнебольшимпорциямданных,какправило,ккаждомубайту,чтодаеткоэффициентизбыточностидляэтогометода 1/8.254.Описание структуры сетевого контроллера и графа егосостояний4.1.Описание структуры сетевого контроллераРисунок 7 - Структура сетевого контроллераТребования для каждого блока:●БПНК - блок проверки начала кадра. Добавляется для каждойстанции, чтобы определить первые восемь бит, если эти биты01111110, то из этого следует, что следующие 7 бит  являютсяданными адреса получателя.●БПБЧ - необходим для контроля ошибок в кадре. Проверяется битчетности с помощью сложения значений по модулю два, затемсравнивается со значением бита четности: если совпадает, тоошибки нет, если не совпадает - кадр искажен.26●БПА - блок проверки адреса. Текущая станция сравнивает адресаполучателя и отправителя со своим. при совпадении адреса утекущей станции с адресом отправителя и при это тип кадраравен 1, то сбрасывается timeout и буфер передачи очищается.●Буфер приема -  определяется значением 900 бит (размер кадра),так как производительность станции неизвестна.●БИБО - блок инициализации бита ошибки принимает значение 0или 1, где 0 - нет ошибок, 1 - есть ошибка.●БИБКО - блок инициализации бита кадра ответа. В поле типкадра будет 1, так как кадр ответа.●Буфер транзита - для хранения 1 кадра объем 900 бит. Приприоритете кольца объем буфера транзита не должен бытьбольшим.●Буфер передачи - станция не передает кадр в буфер передачи,если он еще не полный, поэтому объем у буфера передачи дляхранения 1 кадра  900 бит.●ФК - формирователь кадра, объем 9 бит. На данном этапезадаются значения полям адреса получателя, отправителя, типакадров, поля наличия ошибок, вычисляются биты четности. Таккак данные идут от станции, то в поле тип кадра значение 0 - кадрданных.●Так как приоритет кольца, то сетевой контроллер в выходнойинтерфейс передает при наличии кадры из буфера транзита, азатем из буфера передачи.Время для блока timeout необходимо рассчитывать исходя изхарактеристик сети и количества станций. В нашем случае для 90 станций инеобходимо найти среднюю задержку передачи кадра между двумя наиболееотдаленными станциями27Timeout вычисляется по формуле:𝑇𝑖𝑚𝑒𝑜𝑢𝑡=𝑇𝑓(1,90)+𝑇𝑓(90,1)+𝑡форм+𝑡обработкиРассчитаем время равное средней величине задержки для передачикадра на наиболее отдалённую станцию:𝑇𝑓(1,90)=0,2758*10−10+89*(2,162*10−6+4,11*10−6)+4,11*10−6++4,5*10−4=1,01 мсек𝑇𝑓(90,1)=0,2758*10−10+(2,162*10−6+4,11*10−6)+4,11*10−6++4,5*10−4=0,46 мсекберем 0,5 каждый𝑡форм,𝑡обработкиТогда:𝑇𝑖𝑚𝑒𝑜𝑢𝑡=1,01+0,46+0,5+0,5=2,47 мсПолученное время необходимо брать в десятикратном размере, так какмогут быть станции, которые будут работать медленно, что приведет кнежелательному дублированию, соответственно timeout=20(мсек)284.2.Граф-схема состояний сетевого контроллераВкольцеможетприменяетсяпроцедурапередачикадрасвозвратомданныхкпередающейстанции.Этапроцедурасоответствуетпростомукольцу.Необходимоопределитьиописатьдетальныйграфсостоянийсетевогоконтроллерадлязаданногорежимаработы.Можноопределить3состояния,вкотором может находиться сетевой контроллер.Приемник(R).ВэтомсостоянииСКпрослушиваетканал,принимаетданныевблоквходногоинтерфейса,выбираетипринимаетизнегото,чтоадресовано ему.Транзит(Т).ВэтомсостоянииСКдожидаетсяосвобождениявыходногоинтерфейсаипередаеттранзитныйкадр,записанныйвбуфертранзита,далеепокольцучерезблоквыходногоинтерфейсавсоответствиизаданнымприоритетом.Передатчик(S).ВэтомсостоянииСКдожидаетсяосвобождениявыходногоинтерфейсаипередаетдалеепокольцукадризвыходногобуфера,записанный ранее станцией.29Рисунок 8 - Граф состояний сетевого контроллера30Рассматриваемые переходы:1.s1 срабатывает, когда кадр поступает от станции2.s2 срабатывает, когда данные и АП проходят через блок ФК, вкотором задаются значения полям адреса получателя,отправителя, типа кадров, поля наличия ошибок, вычисляютсябиты четности3.s3 срабатывает при освобождении буфера транзита4.s4 срабатывает при передаче в сеть через выходной интерфейс5.s6  срабатывает, когда кадр поступает через входной интерфейс6.s7 срабатывает, когда поступает последовательность 01111110,которая означает, что следующие 7 бит  являются данными адресаполучателя7.s14 срабатывает, если все поля P совпадают с подсчитанными вэтом блоке битами четности8.s8 срабатывает, если в блоке БСПЧ обнаружена ошибка9.s9 срабатывает срабатывает после инициализации поля БО,равной ошибке, обнаруженной в блоке проверки четности бита10.s5 срабатывает при передаче кадра в сеть11.s10 срабатывает, если адрес получателя и адрес отправителя несовпадают с текущей станцией, либо адрес отправителясовпадает с текущей станцией и ТК = 0.12.s11 срабатывает, если адрес текущей станции не совпадает с АПи АО13.s15 срабатывает, если адрес получателя совпадает с адресомтекущей станции14.s12 срабатывает, если кадр копируется в буфер приема15.s13 срабатывает, если инициализирован тип кадра-ответа16.s16 срабатывает, если адрес отправителя совпадает с адресомтекущей станции и тип кадра = 1.3117.s17 срабатывает при очищении буфера, обнулении таймера иперевода станции в режим станции транзита или получателя18.s18 срабатывает, если кадр передается в сеть5.Разработка протокола подуровня MAC и описание алгоритмареализации процедуры передачи кадра в зависимости отзаданного метода контроляФормированиебитовчетностипроизводитсяследующимобразом.Длякаждогополякадра(заисключениемполяфлаганачала,поляТКиполяБО)высчитываетсясуммазначенийбитовпомодулюдва.Затемданныйрезультатвносится в соответствующее поле P.Припроверкеданныхпроисходиттакаяжеоперация–высчитываетсясумма по модулю 2, а затем сравнивается со значением поля P.Если станция А хочет передать кадр станции В.Формируетсякадр.Устанавливаетсяфлагначалакадра01111110.Далеезаноситсяадресполучателяиадресотправителя.Типкадрабудетравен0,таккаккадркадрданных.Обнаружениеошибокравно0,потомучтоошибокнет.Вдлинуполяданныхзаноситсяколичествобайт,которыенеобходимоотправить. Сами данные помещаются в поле данныхБитчетностисчитаетсявкаждоминформационномполе,результатхранитсявбитечетностиопределенногополя.Запускаетсяtimeout.Соединениесосредойпередачиустанавливается.Когдакаждаястанцияполучаетпакетданных,тоопределяетфлагначала.Послеполучениякадрарабочаястанциявыполняетсобственноевычислениепомодулю2,сравниваетполученныйбитчетностиспринятым.Еслибитчетностинесовпадает,тостанцияприемникформируеткадр-ответсошибкой.Сравниваетсяадресполучателяиотправителясадресомтекущейстанции:еслисовпаладресотправителяиприэтомтипкадра1,токадрснимаетсяс32сети,когдадостигнетисточника,timeoutостанавливается,абуферпередачиочищается.Еслиадрессовпалсадресомполучателяиприэтомтипкадра0,тотипкадраменяетсяна1,акадркопируетсявбуферприема.Еслижеадрестекущейстанциинесовпалсадресомотправителяилиполучателя,токадрчерез буфер транзита идет дальше по сети.ЕсливтечениевремениtimeoutстанцияАтакинеполучилакадр-ответ,токадрпосылаетсяеще10раз.Кадротбросится,есликадр-ответне получен.336.Граф-схема алгоритма процедуры передачи кадра в сетиРисунок 9 - Схема алгоритма для режима работы децентрализованного(транзитного) мониторного узла347.Результаты моделированияРисунок 10 - Пример успешно отправленного кадра, бит ошибки = 0.35Рисунок 11 - Отправленный кадр с ошибкой в поле адрес отправителя,бит ошибки = 1.36Рисунок 12 - Отправленный кадр с ошибкой в адресе получателя37Рисунок 13 - Кадр с ошибкой в поле длина поля данных38Рисунок 14 - Кадр с ошибкой в поле данных8.Анализ результатовВходевыполнениякурсовогопроектабылирассчитанысредняязадержкапередачикадрапосетиивероятностьпрохождениятранзитомчерезопределенныйузел,разработаныалгоритмконтроляошибок,протоколдостовернойпередачиданныхиреализованапрограммнаямодельработыстанции в сети.Контрольпопаритетупредставляетсобойнаиболеепростойметодконтроляданных.Втожевремяэтонаименеемощныйалгоритмконтроля,таккаксегопомощьюможнообнаружитьтолькоодиночныеошибкивпроверяемых данных.39Быловыполненомоделированиеработыстанциивсетипризаданныхусловияхиограничениях.Результатыработыпрограммыпоказывают,чтопрограмма работает корректно.9.Приложение9.1.main.cpp#include "station.hpp"intmain() {setlocale(LC_ALL,"Russian");Station s;}9.2.station.hpp#pragma once#include "frame.hpp"#include <time.h>#include <stdlib.h>classStation{shortsend[7];shortrecv[7];shortcontrol;shortlength[6];shortdata[48];Frame frame;Frame frameA;intN = 90;public:Station() {intch;40cout<<"1) Отправка кадра"<<endl;cout<<"2) Ошибка в адресе отправителя"<<endl;cout<<"3) Ошибка в адресе получателя"<<endl;cout<<"5) Ошибка в длине поля данных"<<endl;cout<<"6) Ошибка в данных"<<endl;cin>> ch;cout<<endl;system("cls");initP();frame.init(send, recv, control, length, data);cout<<"Отправка кадра"<<endl;frame.show();switch(ch){case1:break;case2:frame.send[3] = (frame.send[3] == 1) ? 0 : 1;break;case3:frame.recv[4] = (frame.recv[4] == 1) ? 0 : 1;case4:frame.control = (frame.control == 1) ? 0 : 1;break;case5:frame.length[4] = (frame.length[4] == 1) ? 0: 1;break;case6:frame.data[5] = (frame.data[5] == 1) ? 0 : 1;break;default:exit(1);break;}41intj = 0;for(inti = 0; i < 7; i++)j += frame.recv[i] *pow((float)2, 6 - i);cout<<endl;j++;j = j % N;cout<<endl;if(frame.check() ==true) {cout<<"Адрес отправителя == Адресполучателя. Пакет отброшен"<<endl;return;}intnum = 16;while(num != 0) {cout<<endl;intres = par(j);if(res == 0) {cout<<endl;cout<<"Отправить кадр-ответ"<<endl;cout<<"1) Да"<<endl;cout<<"2) Нет"<<endl;cin>> res;if(res == 1) {frameA.show();return;}else{cout<<"Адрес не может бытьдостигнут"<<endl;cout<<"Кадр будет отправлен еще "<< num - 1 <<"  раз"<<endl;num--;42}}}}voidinitP() {send[0] = 0;send[1] = 0;send[2] = 0;send[3] = 0;send[4] = 0;send[5] = 0;send[6] = 0;recv[0] = 0;recv[1] = 0;recv[2] = 0;recv[3] = 0;recv[4] = 0;recv[5] = 0;recv[6] = 0;ints, r;intbuf[7];intk = 1;cout<<"Введите адрес станции-отправителя:"<<endl;cin>> s;cout<<"Введите адрес станции-получателя:"<<endl;cin>> r;inti = 0;while(s) {send[6 - i] = (s % 2);k *= 10;s /= 2;43i++;}k = 1;i = 0;while(r) {recv[6 - i] = (r % 2);k *= 10;r /= 2;i++;}control = 0;length[0] = 0;length[1] = 0;length[2] = 0;length[3] = 1;length[4] = 0;length[5] = 1;srand(time(NULL));for(inti = 0; i < 48; i++)data[i] = (rand()) % 2;}intreceive(Frame frame,intj) {intcounter;intstation[7];intstationRecv[7];counter = 0;intbuf = 0;intk = j;intflag = 0;shortparity_send = 0;shortparity_recv = 0;44shortparity_control = 0;shortparity_length = 0;shortparity_data[48];for(inti = 0; i < 7; i++) {station[6 - i] = k % 2;k = (j - station[6 - i]) / 2;j = k;}for(inti = 0; i < 7; i++) {parity_send += frame.send[i];}parity_send %= 2;for(inti = 0; i < 7; i++) {parity_recv += frame.recv[i];}parity_recv %= 2;parity_control += frame.control;parity_control %= 2;for(inti = 0; i < 6; i++) {parity_length += frame.length[i];}parity_length %= 2;for(inti = 0; i < 48; i++) {parity_data[i] += frame.data[i] % 2;}if(frame.parity_send != parity_send)return1;if(frame.parity_recv != parity_recv)return1;45if(frame.parity_control != parity_control)return1;if(frame.parity_length != parity_length)return1;for(inti = 0; i < 48; i++)if(frame.parity_data[i] != parity_data[i])return1;for(inti = 0; i < 7; i++)if(frame.recv[i] == station[i])counter++;if(counter != 7)return0;for(inti = 0; i < 7; i++)if(frame.send[i] == station[i])counter++;if(counter == 7)return6;for(inti = 0; i < 7; i++)buf += frame.send[i] *pow((float)2, 7 - i);if(buf > N)return11;return10;}intpar(intj) {intres = 2;46for(inti = 0; i < N; i++) {j = j % N;intfl = receive(frame, j);switch(fl){case1:control = 1;cout<<"Ошибка"<<endl;frameA.initA(frame.send, frame.recv,control, frame.length, frame.data);return0;break;case6:cout<<"Кадр-ответ успешно доставлен"<<endl;return1;break;case10:frameA.initA(frame.send, frame.recv,control, frame.length, frame.data);return0;break;case11:cout<<"Адрес доставки больше 90"<<endl;return0;break;default:break;}j++;}cout<<"Кадр успешно вернулся к источнику и былотброшен"<<endl;47returnres;}};9.3.frame.hpp#pragma once#include <iostream>usingnamespacestd;classFrame{public:shortstart[8];shortsend[7];shortparity_send = 0;shortrecv[7];shortparity_recv = 0;shortcontrol = 0;shortparity_control = 0;shortlength[6];shortparity_length = 0;shortdata[48];shortparity_data[48];voidinit(shortsend[7],shortrecv[7],shortcontrol,shortlength[6],shortdata[48]) {this->start[0] = 0;this->start[1] = 1;this->start[2] = 1;this->start[3] = 1;this->start[4] = 1;this->start[5] = 1;this->start[6] = 1;this->start[7] = 0;48for(inti = 0; i < 7; i++) {this->send[i] = send[i];parity_send += send[i];}parity_send %= 2;for(inti = 0; i < 7; i++) {this->recv[i] = recv[i];parity_recv += recv[i];}parity_recv %= 2;this->control = control;parity_control += control;parity_control %= 2;for(inti = 0; i < 6; i++) {this->length[i] = length[i];parity_length += length[i];}parity_length %= 2;for(inti = 0; i < 48; i++) {this->data[i] = data[i];parity_data[i] += data[i] % 2;}}voidshow() {cout<<"Флаг начала: \t\t";for(inti = 0; i < 8; i++)cout<< start[i];cout<<endl;cout<<"Адрес отправителя: \t";49for(inti = 0; i < 7; i++)cout<< send[i];cout<<endl;cout<<"Адрес получателя: \t";for(inti = 0; i < 7; i++)cout<< recv[i];cout<<endl;cout<<"Бит ошибки: \t\t";cout<< control;cout<<endl;cout<<"Длина поля данных: \t";for(inti = 0; i < 6; i++)cout<< length[i];cout<<endl;cout<<"Поле данных: \t\t";for(inti = 0; i < 48; i++)cout<< data[i];cout<<endl;}voidinitA(shortsend[7],shortrecv[7],shortcontrol,shortlength[6],shortdata[48]) {this->start[0] = 0;this->start[1] = 1;this->start[2] = 1;this->start[3] = 1;this->start[4] = 1;this->start[5] = 1;this->start[6] = 1;this->start[7] = 0;for(inti = 0; i < 7; i++) {50this->send[i] = recv[i];parity_send += recv[i];}parity_send %= 2;for(inti = 0; i < 7; i++) {this->recv[i] = send[i];parity_recv += send[i];}parity_recv %= 2;this->control = control;parity_control += control;parity_control %= 2;for(inti = 0; i < 6; i++) {this->length[i] = length[i];parity_length += length[i];}parity_length %= 2;for(inti = 0; i < 48; i++) {this->data[i] = data[i];parity_data[i] += data[i] % 2;}}boolcheck() {for(inti = 0; i < 7; i++) {if(send[i] != recv[i])returnfalse;}returntrue;}};51