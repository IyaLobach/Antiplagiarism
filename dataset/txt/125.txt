Цель работы: Получить навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019. Создать программу с использованием Windows Forms на языках С#, С++, C. Часть 1. (выполняется на языке C.C++) Вариант №1 Задание:   Реализовать механизм шифрования и расшифрования символьной информации с применением операции инверсии ~.  Выполнить проверку на допустимость значений используемых переменных;  При описании переменных применить регистровый класс памяти.  Ход работы: создаем функцию кодировщик (декодировщик), которая посимвольно инвертирует входную строку. Считываем строку с клавиатуры и используем ее в качестве параметра нашей функции. На выходе – зашифрованная (расшифрованная) строка. Листинг кода: #include <iostream> #include <string> using namespace std;   string fun_coder_decoder(register string str){ // функция кодеровщик/декодировщик  for (register int i = 0; i < str.length(); i++) {   str[i] = ~(str[i]);  }  return str; }  int main() {  register string str; // регистровый класс памяти   cout << "Enter the string: ";  getline(cin, str);   cout << "Coded information: ";  str = fun_coder_decoder(str);  cout << str << endl;   cout << "Decoded information: ";  str = fun_coder_decoder(str);  cout << str << endl;   return 0; }  Скриншот с результатами:  Рисунок 1 - Тест 1   Рисунок 2 - Тест 2   Рисунок 3 - Тест 3  Часть 2. (выполняется на языке C#) Вариант №1 Задание:  1. Создать консольный и Windows Forms проекты выполняющие, поразрядное сложение двух строк (вашей фамилии и имени) с выводом промежуточных результатов. 2. Создать программу, выполняющую персональное задание в соответствии с вариантом 1: 1. Дано натуральное число:   найти сумму цифр этого числа;   определить, верно ли, что число начинается и заканчивается одной и той же цифрой.  2.  Найти все трехзначные числа, такие, сумма цифр которых равна А, а само число делится на В (А и В вводятся с клавиатуры).   Ход работы для задания 1: считываем имя и фамилию, поразрядно приводим символы имени и фамилии к целочисленному типу (int) и складываем, используя операцию ИЛИ (|). Затем полученные данные приводим обратно к символьному типу (char), после чего выводим результат. Листинг кода (задание 1, консольный проект):  using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace laba1_cSharp_consel {     class Program     {         static void Main(string[] args)         {             int flag;             string name;             do  //ввод с проверкой на наличие чисел и других знаков             {                 Console.Write("Enter your name: ");                 name = Console.ReadLine();                 flag = 1;                 for (int i = 0; i < name.Length; i++)                 {                     if (name[i] >= ' ' && name[i] <= '@' || name[i] >= '[' && name[i] <= '_' || name[i] >= '{' && name[i] <= '-')                     {                         flag = 0;                         break;                     }                 }                 if (flag == 0)                     Console.Write("Incorrect input.Try again!\n");             } while (flag == 0);              // ввод с проверкой на наличие чисел и других знаков             int flag2;             string suname;             do             {                 Console.Write("Enter your suname: ");                 suname = Console.ReadLine();                 flag2 = 1;                 for (int i = 0; i < suname.Length; i++)                 {                     if (suname[i] >= ' ' && suname[i] <= '@' || suname[i] >= '[' && suname[i] <= '_' || suname[i] >= '{' && suname[i] <= '-')                     {                         flag2 = 0;                         break;                     }                 }                 if (flag2 == 0)                     Console.Write("Incorrect input.Try again!\n");             } while (flag2 == 0);              // выбираем подходящий размер нашего массива char'ов             int size = 0;             if (suname.Length >= name.Length) { size = suname.Length; }             else size = name.Length;              int[] mass = new int[size];              // операция пооразрядного сложения             // вывод промежуточных результатов              for (int i = 0; i < size; i++)             {                 if (i >= name.Length && i < suname.Length)                 {                     mass[i] = (int)suname[i];                     System.Console.Write($"step {i}: {(int)suname[i]} => {(int)mass[i]}\n ");                 }                 else if (i >= suname.Length && i < name.Length)                 {                     mass[i] = (int)name[i];                     System.Console.Write($"step {i}: {(int)name[i]} => {(int)mass[i]}\n ");                 }                 else                 {                     mass[i] = (int)suname[i] | (int)name[i];                     System.Console.Write($"step {i}: {(int)suname[i]} | {(int)name[i]} = {(int)mass[i]}\n ");                 }             }             // вывод конечного результата              System.Console.Write("Result: ");             for (int i = 0; i < size; i++)             {                 System.Console.Write((char)mass[i]);             }             System.Console.Write("\n");         }     } }  Скриншот с результатами (задание 1, консольный проект):  Рисунок 4 - Тест 1   Рисунок 5 - Тест 2   Рисунок 6 - Тест 3  Листинг кода (задание 1, Windows Forms проект): using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; namespace Laba_1_wForms {     public partial class Form1 : Form     {         public Form1()         {             // Подсказки на ввод              InitializeComponent();             nameTextBox.Text = "Введите имя";             nameTextBox.ForeColor = Color.Gray;             sunameTextBox.Text = "Введите фамилию";              sunameTextBox.ForeColor = Color.Gray;         }         private void nameTextBox_Enter(object sender, EventArgs e)         {   // при нажатии - подсказка пропадает             if (nameTextBox.Text == "Введите имя")             {                 nameTextBox.Text = "";                 nameTextBox.ForeColor = Color.Black;             }         }         private void nameTextBox_Leave(object sender, EventArgs e)         { // если ничего не ввели - подсказка краснеет             if (nameTextBox.Text == "")             {                 nameTextBox.Text = "Введите имя";                 nameTextBox.ForeColor = Color.Red;             }         }         private void sunameTextBox_Enter(object sender, EventArgs e)         {  // при нажатии - подсказка пропадает             if (sunameTextBox.Text == "Введите фамилию")             {                 sunameTextBox.Text = "";                 sunameTextBox.ForeColor = Color.Black;             }         }         private void sunameTextBox_Leave(object sender, EventArgs e)         {// если ничего не ввели - подсказка краснеет             if (sunameTextBox.Text == "")             {                 sunameTextBox.Text = "Введите фамилию";                 sunameTextBox.ForeColor = Color.Red;             }         }         private void readyButton_Click(object sender, EventArgs e)         {             // проверка на пустоту имени             if (nameTextBox.Text == "Введите имя")               {                 MessageBox.Show("Введите имя!");                 return;             }              // поверка на корректность ввода             int flag1 = 1;             string name = nameTextBox.Text;             for (int i = 0; i < name.Length; i++)             {                 if (name[i] >= ' ' && name[i] <= '@' || name[i] >= '[' && name[i] <= '_' || name[i] >= '{' && name[i] <= '-')                 {                     flag1 = 0;                     break;                 }             }             if (flag1 == 0)              {                 MessageBox.Show("Некорректный ввод имени!");                 return;             }              // проверка на пустоту фамилии             if (sunameTextBox.Text == "Введите фамилию")             {                 MessageBox.Show("Введите фамилию!");                 return;             }              // поверка на корректность ввода             int flag2 = 1;             string suname = sunameTextBox.Text;             for (int i = 0; i < suname.Length; i++)             {                 if (suname[i] >= ' ' && suname[i] <= '@' || suname[i] >= '[' && suname[i] <= '_' || suname[i] >= '{' && suname[i] <= '-')                 {                     flag2 = 0;                     break;                 }             }             if (flag2 == 0)             {                 MessageBox.Show("Некорректный ввод фамилии!");                 return;             }               if (flag1 == 1 && flag2 == 1)  // если прошли проверку             {                 //подбираем размер массива char'ов                 int size = 0;                 if (suname.Length >= name.Length) { size = suname.Length; }                 else size = name.Length;                  int[] mass = new int[size];                  StringBuilder result = new StringBuilder(); // конечный результат                 StringBuilder str = new StringBuilder(); // собирательная строка                  // операция поразрядного сложения                 // вывод промежуточных результатов                 for (int i = 0; i < size; i++)                 {                     if (i >= name.Length && i < suname.Length) {                          mass[i] = (int)suname[i];                         str.Append(i + 1).Append(".").Append((int)suname[i]).Append("=>").Append((int)mass[i]).Append("\n");                         result.Append((char)mass[i]);                     }                     else if (i >= suname.Length && i < name.Length) {                          mass[i] = (int)name[i];                         str.Append(i + 1).Append(".").Append((int)name[i]).Append("=>").Append((int)mass[i]).Append("\n");                         result.Append((char)mass[i]);                     }                     else {                          mass[i] = (int)suname[i] | (int)name[i];                         str.Append(i + 1).Append(".").Append((int)suname[i]).Append("|").Append((int)name[i]).Append("=").Append((int)mass[i]).Append("\n");                         result.Append((char)mass[i]);                     }                 }                 str.Append("Final: ").Append(result);                 MessageBox.Show(str + "", "Result:"); // вывод результата             }         }     } }   Скриншот с результатами (задание 1, Windows Forms проект):  Рисунок 7 - Исходный Form   Рисунок 8 - Уведомление при отсутствии имени (фамилии)    Рисунок 9 - Уведомление при некорректном вводе имени (фамилии)   Рисунок 10 - Корректный ввод, тест 1   Рисунок 11 - Корректный ввод, тест 2   Рисунок 12 - Корректный ввод, тест 3 Ход работы для задания 2:  1. Считываем натуральное число, с помощью деления на 10 с остатком выделяем цифры данного числа (при этом запоминаем первую и последнюю цифру), после чего выводим сумму полученных цифр, а также, сравнивая первую и последнюю, определяем, верно ли, что число начинается и заканчивается одно и той же цифрой. 2. Считываем числа А и В, перебираем все трехзначные числа. Для каждого из них выделяем цифры, используя деление с остатком на 10, суммируем их. Также каждое число делим с остатком на В. Если сумма цифр равна А и остаток от деления на В равен 0 – выводим число на экран.  Листинг кода (задание 2, Windows Forms проект): using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms;  namespace lab1__cSharp_Vod_nat_num {     public partial class Form1 : Form     {         public Form1()         { // подсказка на ввод             InitializeComponent();             numBox.Text = "Введите число";             numBox.ForeColor = Color.Gray;              ABox.Text = "Введите А";             ABox.ForeColor = Color.Gray;              BBox.Text = "Введите В";             BBox.ForeColor = Color.Gray;          }         private void button1_Click(object sender, EventArgs e)         {              // проверка на пустоту числа             if (numBox.Text == "Введите число")             {                 MessageBox.Show("Введите число!");                 return;             }              // проверка на пустоту A             if (ABox.Text == "Введите А")             {                 MessageBox.Show("Введите А!");                 return;             }              // проверка на пустоту B             if (BBox.Text == "Введите В")             {                 MessageBox.Show("Введите В!");                 return;             }              // проверка на ввод числа              int flag = 1;             string numStr = numBox.Text;             for (int h = 0; h < numStr.Length; h++)             {                 if (!(numStr[h] >= '0' && numStr[h] <= '9'))                 {                     flag = 0;                     break;                 }             }                          // проверка на ввод A             int flag3 = 1;             string AStr = ABox.Text;             for (int h = 0; h < AStr.Length; h++)             {                 if (!(AStr[h] >= '0' && AStr[h] <= '9'))                 {                     flag3 = 0;                     break;                 }             }                          // проверка на ввод B             int flag4 = 1;             string BStr = BBox.Text;             for (int h = 0; h < BStr.Length; h++)             {                 if (!(BStr[h] >= '0' && BStr[h] <= '9'))                 {                     flag4 = 0;                     break;                 }             }              if (flag4 == 0 || flag == 0 || flag3 == 0)             {                 MessageBox.Show("Введина буква. Попробуйте еще раз!");                 return;             }               // проверка на ввод натурального числа              int number = Convert.ToInt32(numBox.Text);             int a = Convert.ToInt32(ABox.Text);             int b = Convert.ToInt32(BBox.Text);             if (b == 0 || number <= 0 || a <= 0 )             {                 MessageBox.Show("Неккоректный ввод. Попробуйте еще раз! ");                 return;             }             else // если корректный ввод             {                 int res = 0;                 int last = 0;                 int num = number;                 int first = num % 10; // первая цифра                  while (num > 0)                 {                     last = num % 10; // последняя цифра                     res += (num % 10);                     num /= 10;                 }                  StringBuilder str = new StringBuilder(); // собирательная строка                  //сумма цифр                 str.Append("Сумма цифр числа ").Append(number).Append(" равна ").Append(res).Append("\n");                  //1.2                 //равенство\неравенство первой и последней цифры                 str.Append("Первая цифра равна последней ? => ").Append(first == last).Append("\n");                  //2                 //числа, делящихся на B, и сумма цифр которых равна A                 str.Append("Числа, сумма цифр которых равна ").Append(a).Append(" , а само число делится на ").Append(b).Append(": \n");                                  //операция подбора 3-х значных чисел, сумма цифр которых равна А, а само число делится на В                 for (int j = 100; j < 1000; j++) // проверяем все 3-х значные числа                 {                     int sum = 0;                     int ptr = j;                     while (ptr > 0)                     {                         sum += (ptr % 10);                         ptr /= 10;                     }                     if (sum == a && j % b == 0) // проверка суммы и деления на B                         str.Append(j).Append("  ");                 }                  MessageBox.Show("" + str, "Результат: "); //результат             }         }          private void numBox_Leave(object sender, EventArgs e)         { // если не ввели число - подсказа краснеет             if (numBox.Text == "")             {                 numBox.Text = "Введите число";                 numBox.ForeColor = Color.Red;             }         }          private void numBox_Enter(object sender, EventArgs e)         {             if (numBox.Text == "Введите число")             {                 numBox.Text = "";                 numBox.ForeColor = Color.Black;             }         }          private void ABox_Enter(object sender, EventArgs e)         {             if (ABox.Text == "Введите А")             {                 ABox.Text = "";                 ABox.ForeColor = Color.Black;             }         }          private void ABox_Leave(object sender, EventArgs e)         {             if (ABox.Text == "")             {                 ABox.Text = "Введите А";                 ABox.ForeColor = Color.Red;             }         }          private void BBox_Enter(object sender, EventArgs e)         {             if (BBox.Text == "Введите В")             {                 BBox.Text = "";                 BBox.ForeColor = Color.Black;             }         }          private void BBox_Leave(object sender, EventArgs e)         {             if (BBox.Text == "")             {                 BBox.Text = "Введите В";                 BBox.ForeColor = Color.Red;             }         }     } }  Скриншот с результатами (задание 2, Windows forms проект):   Рисунок 13 - Исходный Form    Рисунок 14 - Уведомление об некорректном вводе чисел   Рисунок 15 - Уведомление об отсутствие чисел    Рисунок 16 – Корректный ввод, тест 1   Рисунок 17 – Корректный ввод, тест 2   Рисунок 18 – Корректный ввод, тест 3  Вывод: входе лабораторной работы были приобретены навыки работы с основными инструментами среды программирования Microsoft Visual Studio 2019, а также была создана программа с использованием Windows Forms на языках С#, С++, C.  