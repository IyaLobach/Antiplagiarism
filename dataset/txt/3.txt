2  СОДЕРЖАНИЕ  ВВЕДЕНИЕ .............................................................................................................. 3 1 Краткое описание алгоритма ........................................................................ 4 2 Теоретическая информация и обозначения ................................................ 4 3 Описание режимов......................................................................................... 6 4 Параметры Kyber ........................................................................................... 9 5 Ожидаемый уровень безопасности ............................................................ 11 6 Достоинства и сравнения с другими алгоритмами и схемами ............... 11 6.1 Достоинства ............................................................................................... 11 6.2 Сравнение с SIDH ..................................................................................... 12 6.3 Сравнение с алгоритмами на основе кодов ........................................... 12 6.4 Сравнение с схемами на основе LWE .................................................... 13 6.5 Сравнение с схемами на основе RLWE .................................................. 13 6.6 Сравнение с алгоритмом NTRU .............................................................. 15 ЗАКЛЮЧЕНИЕ ..................................................................................................... 16 СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ ........................................... 17                          3  ВВЕДЕНИЕ Задачей данной курсовой работы является составление пояснительной записки к алгоритму CRYSTALS-KYBER. Алгоритм основан на схеме шифрования с открытым ключом, предназначенной для обеспечения безопасности как от классических, так и от квантовых атак. Сама идея шифрования основана на квантовой стойкости известной задачи MLWE. Данный алгоритм является одним из самых перспективных претендентов на роль будущего постквантового стандарта (что подтверждает его проход в 3 этап конкурса NIST). Он обладает неплохой производительностью, его основой является хорошо изученная проблема.                    4  1 Краткое описание алгоритма Kyber – это механизм инкапсуляции ключей (KEM) с защитой IND-CCA2, основанный на стойкости проблемы обучения с ошибками (LWE) над модульными решетками (MLWE). Алгоритм Kyber имеет два режима: 1) Kyber.CPAPKE – это режиму соответствует уровень защиты IND-CPA 2) Kyber.CCAKEM – это режиму соответствует уровень защиты IND-CCA2. Kyber.CCAKEM получают с помощью слегка изменённого преобразования Фудзисаки–Окамото (FO)  2 Теоретическая информация и обозначения β – множество {0…255}, т.е. набор 8-битных целых чисел без знака (байт) k - байтовый массив длины k * - байтовый массив произвольной длины R– кольцо многочленов []/(1)nXX qR- кольцо многочленов []/(1)nqXX, где '12nn, здесь и далее 256n, '9n, 3329q (,)(2/)*mod2ddqCompressxdqx - функция сжатия (,)(/2)*dqDecompressxdqx - функция расширения 32*:PRF - псевдослучайная функция, используется SHAKE-256 **:XOF- расширение вывода, используется SHAKE-128 *32:H- хеш-функция, используется SHA3-256 *3232:G- хеш-функция, используется SHA3-512 **:KDF- функция генерации ключа, используется SHAKE-256 5  NTT - Теоретико-числовые преобразования, критическая по времени функция, требуемая многими постквантовыми криптографическими протоколами, основанными на решетках. Kyber использует детерминированный подход к выборке элементов вqR , которые статистически близки к равномерно случайному распределению. Для этого используется функция Parse:  Рис.1 – Функция Parse  Шум в алгоритме Kyber генерируется с помощью центрированного биноминального распределения и обеспечивается соответствующей функцией:  Рис.2 – Функция CBD   6   В алгоритме требуется представлять в виде байтовых массивов многочлены (и наоборот), поэтому были созданы две функции Encode и Decode:  Рис.3 – Функция Decode  3 Описание режимов Kyber.CPAPKE Kyber.CPAPKE похож на схему шифрования LPR которая была представлена для Ring-LWE Любашевским, Пейкертом и Регевым в презентации на Eurocrypt 2010. Данная схема основана на самой первой схеме шифрования на основе проблемы LWE. Главное отличие в том, что базовое кольцо не являлось кольцом q и в том, что и секрет, и векторы ошибок имели малые коэффициенты. Идея использования полиномиального кольца (вместо q) взята у криптосистемы NTRU, представленной Хоффштейном, Пайфером и Сильверманом, в то время как симметрия между секретом и ошибкой уже использовалась в очень похожих криптографических схемах. Основное отличие от схемы шифрования LPR заключается в использовании Module-LWE вместо Ring-LWE. Кроме того, Kyber использует подход, принятый Алкимом, Дукасом, Пеппельманом и Швабе для генерации открытой матрицы A. Кроме того, алгоритм предусматривает сокращение зашифрованных текстов, с помощью округления младших битов, как при обучении, с помощью схем, основанных на округлении (learning-with-7  rounding-based), что является распространенной практикой для уменьшения размера зашифрованного текста в других схемах на основе LWE. Kyber.CPAPKE имеет свои параметры: 12256,,3329,,,,uvnkqdd Параметры n и q должны быть именно такими.  Рис.4 – Генерация ключа для Kyber.CPAPKE 8   Рис.5 – Шифрования для Kyber.CPAPKE   Рис.6 – Дешифрование для Kyber.CPAPKE  Kyber.CСAKEM Данный алгоритм получен из схемы шифрования с открытым ключом IND-CPA, которая описана в предыдущем подразделе, с помощью слегка измененного преобразования Фудзисаки-Окамото.  9   Рис.7 – Генерация ключа для Kyber.CCAKEM   Рис.8 – Инкапсуляция для Kyber.CCAKEM   Рис.9 – Декапсуляция для Kyber.CCAKEM   4 Параметры Kyber Всего определено 3 набора параметров: Kyber512, Kyber768, Kyber1024. Помимо входных параметров можно увидеть дополнительный параметр, который был получен в ходе тестирования (): вероятность ошибки декапсуляции ключа.  10  Таблица 1. Параметры алгоритма Kyber  n k q 1 2 (,)uvdd  Kyber512 256 2 3329 3 2 (10, 4) 1392 Kyber768 256 3 3329 2 2 (10, 4) 1642 Kyber1024 256 4 3329 2 2 (11, 5) 1742  Значение n равно 256, поскольку цель состоит в том, чтобы инкапсулировать ключи с 256 битами энтропии, то есть использовать обычный текст размера 256 бит.  Меньшие значения n потребовали бы кодировать несколько ключевых бит в один полиномиальный коэффициент, что потребовало бы внесения меньших значений шума, а это напрямую повлияло бы на безопасность всего алгоритма. Если же брать значения n больше 256, то это бы помешало масштабированию безопасности с помощью параметра k. Параметр q выбирается как небольшое просто число, удовлетворяющее условию |(1)nq. Такое условие необходимо для быстрого умножения на основе NTT. Есть два меньших простых числа, для которых это свойство тоже справедливо: 257 и 769.   Однако для этих простых чисел незначительная вероятность ошибки декапсуляции была бы недостижима, поэтому было выбрано следующее по величине простое число, т.е. q = 3329. Параметр k выбирается для фиксации размерности алгебраической решетки, которая делится на n. Данный параметр является основным механизмом масштабирования уровня безопасности. Остальные параметры выбраны для обеспечения баланса между безопасностью и вероятностью отказа. Стоить обратить внимания на тот факт, что все 3 набора параметров обеспечивают вероятность отказа меньше чем 1282 Параметр 1 определяет уровень шума s и e в алгоритме 4, а в алгоритме 5 определяет уровень шума r. 11  Параметр 2определяет уровень шума 1e и 2e в алгоритме 5.  5 Ожидаемый уровень безопасности Ранее упоминалось, что все наборы параметров Kyber имеют вероятность сбоя дешифрования. Эти сбои представляют собой угрозу безопасности, и поэтому вероятность их возникновения должна быть небольшой. Но поскольку в классической модели случайного оракула вероятность сбоя дешифрования является теоретико-информационной, авторы не видят необходимости в ее уменьшении по мере повышения уровня безопасности. Стоит обратить внимание, что для Kyber768 и Kyber1024 вероятность ошибки меньше 1602. Это настолько малая величина, что данный аспект безопасности можно исключить из рассмотрения. Что же касается уровней безопасности по требованиям NIST, варианты Kyber можно оценить по 5-балльной шкале как 1, 3 и 5: 1) Kyber512 – 1 балл, уровень безопасности соответствует AES-128 2) Kyber768 – 3 балла, уровень безопасности соответствует AES-192 3) Kyber1024 – 5 баллов, уровень безопасности соответствует AES-256  6 Достоинства и сравнения с другими алгоритмами и схемами 6.1 Достоинства  Начнем с того, что алгоритм имеет очень конкурентоспособные скорости, небольшой размер входных параметров и работает на хорошо изученной проблеме. Также стоит отметить следующие преимущества: 1) Простота реализации: Оптимизированные реализации сосредоточены только на быстрых NTT преобразованиях и быстрой перестановке Keccak. Это даст очень конкурентоспособную производительность для всех наборов параметров Kyber.  12  2) Масштабируемость: переход от одного уровня безопасности к другому осуществляется крайне просто, всего лишь нужно поменять размерность матрицы, выборки шума и округление шифртекста с помощью различных параметров функции сжатия.  6.2 Сравнение с SIDH Интересной альтернативой механизма инкапсуляции ключей на основе решетки является суперсингулярная изогения Диффи-Хеллмана (SIDH). Очевидным преимуществом SIDH являются размеры открытых ключей и зашифрованных текстов, которые при подходящем сжатии примерно в 3 раза меньше, чем открытые ключи и зашифрованные тексты Kyber.  Недостатком SIDH является то, что он работает более чем в 2 раза медленнее, чем Kyber. К тому же схема довольно новая, что затрудняет проведение окончательных сравнений.  6.3 Сравнение с алгоритмами на основе кодов При рассмотрении алгоритмов на основе кодов следует различать классические схемы, такие как схемы МакЭлиса и Нидеррайтера, на основе двоичных кодов Гоппы, и схемы с менее консервативным (но более эффективным) выбором кодов. Алгоритмы на основе кода Гоппы являются проверенными временем и могут считаться консервативным стандартом постквантового примитива. Тем не менее их развертывание во множестве сценариев затруднено большим размером ключа и большим временем генерации данного ключа. Другим вариантом являются квазициклические коды с малой плотностью проверок на четность (QC-MDPC). Эти коды обеспечивают более близкую конкуренцию с точки зрения производительности, но при высоких уровнях защиты не могут обеспечивать (вероятно) достаточно малую вероятность отказа.  13  6.4 Сравнение с схемами на основе LWE Если кто-то не хочет использовать алгебраические структуры в задаче LWE, то есть 2 пути.  Первым вариантом является использование одной из версий оригинальной схемы, придуманной Регевым. Но такой подход делает открытый и секретный ключи невероятно большими по сравнению с алгоритмов Kyber: порядка 1 мегабайта каждый. Шифртекст при этом оказывается примерно одного размера с шифртекстом Kyber. Учитывая размеры ключей, такая схема была бы крайне неэффективной при обмене ключами. Другим вариантом является схема алгоритма Frodo. В данном алгоритме и шифртекст, и ключи имеют размер порядка 11 килобайт. Это примерно в 10 раз больше, чем в алгоритме Kyber. Время работы алгоритма Frodo примерно в 10 раз больше времени работы Kyber. Таким образом, существующие схемы на основе LWE уступают по нескольким параметрам алгоритму Kyber. Но забывать о них не стоит, они являются хорошими резервными вариантами на случай появления эффективных алгоритмов решения проблемы MLWE.  6.5 Сравнение с схемами на основе RLWE Другой альтернативой MLWE являются схемы на основе RLWE. RLWE – это частный случай задачи MLWE, где ширина матрицы A над кольцом R всегда равно 1. Следовательно, чтобы повысить или понизить уровень безопасности, придется менять размер кольца, тогда как в алгоритме Kyber размер кольца фиксирован, а размер модуля меняется. Как было упомянуто выше, одно из преимуществ подхода, который был выбран для Kyber, заключается в том, что нужно иметь только одну хорошую реализацию для реализации операций над кольцом. Изменение размера модуля просто предполагает выполнение большего количества (или меньшего количества) одних и тех же операций над кольцом. 14  А изменение кольца, потребовало бы повторной реализации всех операций. Еще одним преимуществом работы с “малым” кольцом постоянной степени является то, что оно обеспечивает более точный компромисс между производительностью и безопасностью. Самый простой и эффективный способ реализации RLWE – это работа над кольцами []/(1)nXX, где n - степень двойки. Поскольку n является единственным параметром, который непосредственно влияет на уровень безопасности, его ограничение степенями двойки может потребовать превышения необходимой границы безопасности. Например, уровень безопасности Kyber768 при таком подходе недостижим, придется брать выше требуемого. Конечно, можно было бы работать непосредственно по модулю многочлена любой желаемой степени (с ограничением, заключающимся в том, что он должен быть неприводимым по ), но тогда безопасность немного снизилась бы из-за геометрии числовых полей, отличных от степени двойки. Единственное преимущество RLWE перед Kyber заключается в том, что если A представляет собой матрицу k × k, то для ее извлечения из начального значения требуется в k раз больше выходных данных XOF, чем для матрицы 1 × 1.         15  6.6 Сравнение с алгоритмом NTRU По сравнению с Kyber, NTRU обладает всеми преимуществами и недостатками RLWE, но, кроме того, имеет еще два отрицательных момента. Первая генерация ключа NTRU значительно дороже, чем в RLWE, когда кольцо не поддерживает NTT. Причина в том, что генерация ключа NTRU требует полиномиальное деление, тогда как генерация ключа RLWE требует только умножения (если кольцо поддерживает NTT, то деление происходит ненамного медленнее, чем умножение). Вторым возможным недостатком NTRU является то, что геометрия его базовой решетки приводит к атакам, которых не существует против схем RLWE или MLWE. Хотя это свойство, по-видимому, не помогает в атаках на небольшие параметры, которые используются для определения криптосистемы NTRU, но это может указывать на возможную слабость, которая может быть использована в дальнейшем. Одним из возможных достоинств использования NTRU является небольшое преимущество в производительности при шифровании (инкапсуляции), но, учитывая недостатки, это нельзя считать хорошим компромиссом. Кроме того, невозможно определить эффективную версию Module-NTRU, которая позволила бы использовать преимущества Kyber, описанные выше в разделе 6.1.        16  ЗАКЛЮЧЕНИЕ Результатом курсовой работы является составленная пояснительная записка к алгоритму CYSTALS-CYBER, который основан на схеме шифрования с открытым ключом, предназначенной для обеспечения безопасности как от классических атак, так и от квантовых. В ходе написания были описаны все ключевые моменты алгоритма, такие как: построения ключей, шифрование, дешифрование, описание предлагаемых параметров, анализ стойкости, анализ сложности реализации. Помимо этого, были выявлены и раскрыты его преимущества и недостатки.                      17  СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ 1. Joppe Bos, Léo Ducas, Eike Kiltz, Tancrède Lepoint, Vadim Lyubashevsky, John M. Schanck, Peter Schwabe, and Damien Stehlé. CRYSTALS – Kyber: a CCA-secure module-lattice-based KEM. In 2018 IEEE European Symposium on Security and Privacy, EuroS&P 2018. IEEE, 2018. 2. Adeline Langlois and Damien Stehlé. Worst-case to average-case reductions for module lattices. Designs, Codes and Cryptography, 75(3):565–599, 2015. 3. Eiichiro Fujisaki and Tatsuaki Okamoto. Secure integration of asymmetric and symmetric encryption schemes. In Advances in Cryptology - CRYPTO ’99, pages 537–554, 1999. 4. Jeffrey Hoffstein, Jull Pipher, and Joseph H. Silverman. NTRU: a ring-based public key cryptosystem. In Joe P. Buhler, editor, Algorithmic number theory, volume 1423 of LNCS, pages 267–288. Springer, 1998. 5. Oded Regev. On lattices, learning with errors, random linear codes, and cryptography. In STOC ’05 Proceedings of the thirty-seventh annual ACM symposium on Theory of computing, pages 84–93. ACM, 2005. 6. Oded Regev. On lattices, learning with errors, random linear codes, and cryptography. Journal of the ACM, 56(6):34, 2009. 